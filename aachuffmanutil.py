from typing import Optional
from bitreader.bitreader import BitReader

class hcb_struct_1:
    def __init__(self, Offset: int, Extra: int):
        self.Offset = Offset
        self.Extra = Extra

class hcb_struct(list):
    def __init__(self, first_val, *args):
        super().__init__([first_val] + list(args))

# Scale Factor Huffman Codebook (flattened into a 2d array)
huffman_sf = [
	[1, 2],
	[60, 0],
	[1, 2],
	[2, 3],
	[3, 4],
	[59, 0],
	[3, 4],
	[4, 5],
	[5, 6],
	[61, 0],
	[58, 0],
	[62, 0],
	[3, 4],
	[4, 5],
	[5, 6],
	[57, 0],
	[63, 0],
	[4, 5],
	[5, 6],
	[6, 7],
	[7, 8],
	[56, 0],
	[64, 0],
	[55, 0],
	[65, 0],
	[4, 5],
	[5, 6],
	[6, 7],
	[7, 8],
	[66, 0],
	[54, 0],
	[67, 0],
	[5, 6],
	[6, 7],
	[7, 8],
	[8, 9],
	[9, 10],
	[53, 0],
	[68, 0],
	[52, 0],
	[69, 0],
	[51, 0],
	[5, 6],
	[6, 7],
	[7, 8],
	[8, 9],
	[9, 10],
	[70, 0],
	[50, 0],
	[49, 0],
	[71, 0],
	[6, 7],
	[7, 8],
	[8, 9],
	[9, 10],
	[10, 11],
	[11, 12],
	[72, 0],
	[48, 0],
	[73, 0],
	[47, 0],
	[74, 0],
	[46, 0],
	[6, 7],
	[7, 8],
	[8, 9],
	[9, 10],
	[10, 11],
	[11, 12],
	[76, 0],
	[75, 0],
	[77, 0],
	[78, 0],
	[45, 0],
	[43, 0],
	[6, 7],
	[7, 8],
	[8, 9],
	[9, 10],
	[10, 11],
	[11, 12],
	[44, 0],
	[79, 0],
	[42, 0],
	[41, 0],
	[80, 0],
	[40, 0],
	[6, 7],
	[7, 8],
	[8, 9],
	[9, 10],
	[10, 11],
	[11, 12],
	[81, 0],
	[39, 0],
	[82, 0],
	[38, 0],
	[83, 0],
	[7, 8],
	[8, 9],
	[9, 10],
	[10, 11],
	[11, 12],
	[12, 13],
	[13, 14],
	[37, 0],
	[35, 0],
	[85, 0],
	[33, 0],
	[36, 0],
	[34, 0],
	[84, 0],
	[32, 0],
	[6, 7],
	[7, 8],
	[8, 9],
	[9, 10],
	[10, 11],
	[11, 12],
	[87, 0],
	[89, 0],
	[30, 0],
	[31, 0],
	[8, 9],
	[9, 10],
	[10, 11],
	[11, 12],
	[12, 13],
	[13, 14],
	[14, 15],
	[15, 16],
	[86, 0],
	[29, 0],
	[26, 0],
	[27, 0],
	[28, 0],
	[24, 0],
	[88, 0],
	[9, 10],
	[10, 11],
	[11, 12],
	[12, 13],
	[13, 14],
	[14, 15],
	[15, 16],
	[16, 17],
	[17, 18],
	[25, 0],
	[22, 0],
	[23, 0],
	[15, 16],
	[16, 17],
	[17, 18],
	[18, 19],
	[19, 20],
	[20, 21],
	[21, 22],
	[22, 23],
	[23, 24],
	[24, 25],
	[25, 26],
	[26, 27],
	[27, 28],
	[28, 29],
	[29, 30],
	[90, 0],
	[21, 0],
	[19, 0],
	[3, 0],
	[1, 0],
	[2, 0],
	[0, 0],
	[23, 24],
	[24, 25],
	[25, 26],
	[26, 27],
	[27, 28],
	[28, 29],
	[29, 30],
	[30, 31],
	[31, 32],
	[32, 33],
	[33, 34],
	[34, 35],
	[35, 36],
	[36, 37],
	[37, 38],
	[38, 39],
	[39, 40],
	[40, 41],
	[41, 42],
	[42, 43],
	[43, 44],
	[44, 45],
	[45, 46],
	[98, 0],
	[99, 0],
	[100, 0],
	[101, 0],
	[102, 0],
	[117, 0],
	[97, 0],
	[91, 0],
	[92, 0],
	[93, 0],
	[94, 0],
	[95, 0],
	[96, 0],
	[104, 0],
	[111, 0],
	[112, 0],
	[113, 0],
	[114, 0],
	[115, 0],
	[116, 0],
	[110, 0],
	[105, 0],
	[106, 0],
	[107, 0],
	[108, 0],
	[109, 0],
	[118, 0],
	[6, 0],
	[8, 0],
	[9, 0],
	[10, 0],
	[5, 0],
	[103, 0],
	[120, 0],
	[119, 0],
	[4, 0],
	[7, 0],
	[15, 0],
	[16, 0],
	[18, 0],
	[20, 0],
	[17, 0],
	[11, 0],
	[12, 0],
	[14, 0],
	[13, 0],
]

# Spectrum Huffman Codebook 1
huffman_01_1 = [
    hcb_struct_1(0, 0),
    hcb_struct_1(0, 0),
    hcb_struct_1(0, 0),
    hcb_struct_1(0, 0),
    hcb_struct_1(0, 0),
    hcb_struct_1(0, 0),
    hcb_struct_1(0, 0),
    hcb_struct_1(0, 0),
    hcb_struct_1(0, 0),
    hcb_struct_1(0, 0),
    hcb_struct_1(0, 0),
    hcb_struct_1(0, 0),
    hcb_struct_1(0, 0),
    hcb_struct_1(0, 0),
    hcb_struct_1(0, 0),
    hcb_struct_1(0, 0),
    hcb_struct_1(1, 0),
    hcb_struct_1(2, 0),
    hcb_struct_1(3, 0),
    hcb_struct_1(4, 0),
    hcb_struct_1(5, 0),
    hcb_struct_1(6, 0),
    hcb_struct_1(7, 0),
    hcb_struct_1(8, 0),
    hcb_struct_1(9, 2),
    hcb_struct_1(13, 2),
    hcb_struct_1(17, 2),
    hcb_struct_1(21, 2),
    hcb_struct_1(25, 2),
    hcb_struct_1(29, 2),
    hcb_struct_1(33, 4),
    hcb_struct_1(49, 6),
]

huffman_01 = [
    hcb_struct(1, 0, 0, 0, 0),
    hcb_struct(5, 1, 0, 0, 0),
    hcb_struct(5, -1, 0, 0, 0),
    hcb_struct(5, 0, 0, 0, -1),
    hcb_struct(5, 0, 1, 0, 0),
    hcb_struct(5, 0, 0, 0, 1),
    hcb_struct(5, 0, 0, -1, 0),
    hcb_struct(5, 0, 0, 1, 0),
    hcb_struct(5, 0, -1, 0, 0),
    hcb_struct(7, 1, -1, 0, 0),
    hcb_struct(7, -1, 1, 0, 0),
    hcb_struct(7, 0, 0, -1, 1),
    hcb_struct(7, 0, 1, -1, 0),
    hcb_struct(7, 0, -1, 1, 0),
    hcb_struct(7, 0, 0, 1, -1),
    hcb_struct(7, 1, 1, 0, 0),
    hcb_struct(7, 0, 0, -1, -1),
    hcb_struct(7, -1, -1, 0, 0),
    hcb_struct(7, 0, -1, -1, 0),
    hcb_struct(7, 1, 0, -1, 0),
    hcb_struct(7, 0, 1, 0, -1),
    hcb_struct(7, -1, 0, 1, 0),
    hcb_struct(7, 0, 0, 1, 1),
    hcb_struct(7, 1, 0, 1, 0),
    hcb_struct(7, 0, -1, 0, 1),
    hcb_struct(7, 0, 1, 1, 0),
    hcb_struct(7, 0, 1, 0, 1),
    hcb_struct(7, -1, 0, -1, 0),
    hcb_struct(7, 1, 0, 0, 1),
    hcb_struct(7, -1, 0, 0, -1),
    hcb_struct(7, 1, 0, 0, -1),
    hcb_struct(7, -1, 0, 0, 1),
    hcb_struct(7, 0, -1, 0, -1),
    hcb_struct(9, 1, 1, -1, 0),
    hcb_struct(9, -1, 1, -1, 0),
    hcb_struct(9, 1, -1, 1, 0),
    hcb_struct(9, 0, 1, 1, -1),
    hcb_struct(9, 0, 1, -1, 1),
    hcb_struct(9, 0, -1, 1, 1),
    hcb_struct(9, 0, -1, 1, -1),
    hcb_struct(9, 1, -1, -1, 0),
    hcb_struct(9, 1, 0, -1, 1),
    hcb_struct(9, 0, 1, -1, -1),
    hcb_struct(9, -1, 1, 1, 0),
    hcb_struct(9, -1, 0, 1, -1),
    hcb_struct(9, -1, -1, 1, 0),
    hcb_struct(9, 0, -1, -1, 1),
    hcb_struct(9, 1, -1, 0, 1),
    hcb_struct(9, 1, -1, 0, -1),
    hcb_struct(9, -1, 1, 0, -1),
    hcb_struct(9, -1, 1, 0, -1),
    hcb_struct(9, -1, 1, 0, -1),
    hcb_struct(9, -1, 1, 0, -1),
    hcb_struct(9, -1, -1, -1, 0),
    hcb_struct(9, -1, -1, -1, 0),
    hcb_struct(9, -1, -1, -1, 0),
    hcb_struct(9, -1, -1, -1, 0),
    hcb_struct(9, 0, -1, -1, -1),
    hcb_struct(9, 0, -1, -1, -1),
    hcb_struct(9, 0, -1, -1, -1),
    hcb_struct(9, 0, -1, -1, -1),
    hcb_struct(9, 0, 1, 1, 1),
    hcb_struct(9, 0, 1, 1, 1),
    hcb_struct(9, 0, 1, 1, 1),
    hcb_struct(9, 0, 1, 1, 1),
    hcb_struct(9, 1, 0, 1, -1),
    hcb_struct(9, 1, 0, 1, -1),
    hcb_struct(9, 1, 0, 1, -1),
    hcb_struct(9, 1, 0, 1, -1),
    hcb_struct(9, 1, 1, 0, 1),
    hcb_struct(9, 1, 1, 0, 1),
    hcb_struct(9, 1, 1, 0, 1),
    hcb_struct(9, 1, 1, 0, 1),
    hcb_struct(9, -1, 1, 0, 1),
    hcb_struct(9, -1, 1, 0, 1),
    hcb_struct(9, -1, 1, 0, 1),
    hcb_struct(9, -1, 1, 0, 1),
    hcb_struct(9, 1, 1, 1, 0),
    hcb_struct(9, 1, 1, 1, 0),
    hcb_struct(9, 1, 1, 1, 0),
    hcb_struct(9, 1, 1, 1, 0),
    hcb_struct(10, -1, -1, 0, 1),
    hcb_struct(10, -1, -1, 0, 1),
    hcb_struct(10, -1, 0, -1, -1),
    hcb_struct(10, -1, 0, -1, -1),
    hcb_struct(10, 1, 1, 0, -1),
    hcb_struct(10, 1, 1, 0, -1),
    hcb_struct(10, 1, 0, -1, -1),
    hcb_struct(10, 1, 0, -1, -1),
    hcb_struct(10, -1, 0, -1, 1),
    hcb_struct(10, -1, 0, -1, 1),
    hcb_struct(10, -1, -1, 0, -1),
    hcb_struct(10, -1, -1, 0, -1),
    hcb_struct(10, -1, 0, 1, 1),
    hcb_struct(10, -1, 0, 1, 1),
    hcb_struct(10, 1, 0, 1, 1),
    hcb_struct(10, 1, 0, 1, 1),
    hcb_struct(11, 1, -1, 1, -1),
    hcb_struct(11, -1, 1, -1, 1),
    hcb_struct(11, -1, 1, 1, -1),
    hcb_struct(11, 1, -1, -1, 1),
    hcb_struct(11, 1, 1, 1, 1),
    hcb_struct(11, -1, -1, 1, 1),
    hcb_struct(11, 1, 1, -1, -1),
    hcb_struct(11, -1, -1, 1, -1),
    hcb_struct(11, -1, -1, -1, -1),
    hcb_struct(11, 1, 1, -1, 1),
    hcb_struct(11, 1, -1, 1, 1),
    hcb_struct(11, -1, 1, 1, 1),
    hcb_struct(11, -1, 1, -1, -1),
    hcb_struct(11, -1, -1, -1, 1),
    hcb_struct(11, 1, -1, -1, -1),
    hcb_struct(11, 1, 1, 1, -1),
]

# Spectrum Huffman Codebook 2
huffman_02_1 = [
    hcb_struct_1(0, 0),
	hcb_struct_1(0, 0),
	hcb_struct_1(0, 0),
	hcb_struct_1(0, 0),
	hcb_struct_1(1, 0),
	hcb_struct_1(1, 0),
	hcb_struct_1(2, 0),
	hcb_struct_1(3, 0),
	hcb_struct_1(4, 0),
	hcb_struct_1(5, 0),
	hcb_struct_1(6, 0),
	hcb_struct_1(7, 0),
	hcb_struct_1(8, 0),
	hcb_struct_1(9, 1),
	hcb_struct_1(11, 1),
	hcb_struct_1(13, 1),
	hcb_struct_1(15, 1),
	hcb_struct_1(17, 1),
	hcb_struct_1(19, 1),
	hcb_struct_1(21, 1),
	hcb_struct_1(23, 1),
	hcb_struct_1(25, 1),
	hcb_struct_1(27, 1),
	hcb_struct_1(29, 1),
	hcb_struct_1(31, 1),
	hcb_struct_1(33, 2),
	hcb_struct_1(37, 2),
	hcb_struct_1(41, 2),
	hcb_struct_1(45, 3),
	hcb_struct_1(53, 3),
	hcb_struct_1(61, 3),
	hcb_struct_1(69, 4),
]

huffman_02 = [
	hcb_struct(3, 0, 0, 0, 0),
	hcb_struct(4, 1, 0, 0, 0),
	hcb_struct(5, -1, 0, 0, 0),
	hcb_struct(5, 0, 0, 0, 1),
	hcb_struct(5, 0, 0, -1, 0),
	hcb_struct(5, 0, 0, 0, -1),
	hcb_struct(5, 0, -1, 0, 0),
	hcb_struct(5, 0, 0, 1, 0),
	hcb_struct(5, 0, 1, 0, 0),
	hcb_struct(6, 0, -1, 1, 0),
	hcb_struct(6, -1, 1, 0, 0),
	hcb_struct(6, 0, 1, -1, 0),
	hcb_struct(6, 0, 0, 1, -1),
	hcb_struct(6, 0, 1, 0, -1),
	hcb_struct(6, 0, 0, -1, 1),
	hcb_struct(6, -1, 0, 0, -1),
	hcb_struct(6, 1, -1, 0, 0),
	hcb_struct(6, 1, 0, -1, 0),
	hcb_struct(6, -1, -1, 0, 0),
	hcb_struct(6, 0, 0, -1, -1),
	hcb_struct(6, 1, 0, 1, 0),
	hcb_struct(6, 1, 0, 0, 1),
	hcb_struct(6, 0, -1, 0, 1),
	hcb_struct(6, -1, 0, 1, 0),
	hcb_struct(6, 0, 1, 0, 1),
	hcb_struct(6, 0, -1, -1, 0),
	hcb_struct(6, -1, 0, 0, 1),
	hcb_struct(6, 0, -1, 0, -1),
	hcb_struct(6, -1, 0, -1, 0),
	hcb_struct(6, 1, 1, 0, 0),
	hcb_struct(6, 0, 1, 1, 0),
	hcb_struct(6, 0, 0, 1, 1),
	hcb_struct(6, 1, 0, 0, -1),
	hcb_struct(7, 0, 1, -1, 1),
	hcb_struct(7, 1, 0, -1, 1),
	hcb_struct(7, -1, 1, -1, 0),
	hcb_struct(7, 0, -1, 1, -1),
	hcb_struct(7, 1, -1, 1, 0),
	hcb_struct(7, 1, 1, 0, -1),
	hcb_struct(7, 1, 0, 1, 1),
	hcb_struct(7, -1, 1, 1, 0),
	hcb_struct(7, 0, -1, -1, 1),
	hcb_struct(7, 1, 1, 1, 0),
	hcb_struct(7, -1, 0, 1, -1),
	hcb_struct(7, -1, -1, -1, 0),
	hcb_struct(7, -1, 0, -1, 1),
	hcb_struct(7, -1, 0, -1, 1),
	hcb_struct(7, 1, -1, -1, 0),
	hcb_struct(7, 1, -1, -1, 0),
	hcb_struct(7, 1, 1, -1, 0),
	hcb_struct(7, 1, 1, -1, 0),
	hcb_struct(8, 1, -1, 0, 1),
	hcb_struct(8, -1, 1, 0, -1),
	hcb_struct(8, -1, -1, 1, 0),
	hcb_struct(8, -1, 0, 1, 1),
	hcb_struct(8, -1, -1, 0, 1),
	hcb_struct(8, -1, -1, 0, -1),
	hcb_struct(8, 0, -1, -1, -1),
	hcb_struct(8, 1, 0, 1, -1),
	hcb_struct(8, 1, 0, -1, -1),
	hcb_struct(8, 0, 1, -1, -1),
	hcb_struct(8, 0, 1, 1, 1),
	hcb_struct(8, -1, 1, 0, 1),
	hcb_struct(8, -1, 0, -1, -1),
	hcb_struct(8, 0, 1, 1, -1),
	hcb_struct(8, 1, -1, 0, -1),
	hcb_struct(8, 0, -1, 1, 1),
	hcb_struct(8, 1, 1, 0, 1),
	hcb_struct(8, 1, -1, 1, -1),
	hcb_struct(8, -1, 1, -1, 1),
	hcb_struct(8, -1, 1, -1, 1),
	hcb_struct(9, 1, -1, -1, 1),
	hcb_struct(9, -1, -1, -1, -1),
	hcb_struct(9, -1, 1, 1, -1),
	hcb_struct(9, -1, 1, 1, 1),
	hcb_struct(9, 1, 1, 1, 1),
	hcb_struct(9, -1, -1, 1, -1),
	hcb_struct(9, 1, -1, 1, 1),
	hcb_struct(9, -1, 1, -1, -1),
	hcb_struct(9, -1, -1, 1, 1),
	hcb_struct(9, 1, 1, -1, -1),
	hcb_struct(9, 1, -1, -1, -1),
	hcb_struct(9, -1, -1, -1, 1),
	hcb_struct(9, 1, 1, -1, 1),
	hcb_struct(9, 1, 1, 1, -1),
]

# Spectrum Huffman Codebook 2
huffman_03 = [
	hcb_struct(0, 1, 2),
	hcb_struct(1, 0, 0),
	hcb_struct(0, 1, 2),
	hcb_struct(0, 2, 3),
	hcb_struct(0, 3, 4),
	hcb_struct(0, 4, 5),
	hcb_struct(0, 5, 6),
	hcb_struct(0, 6, 7),
	hcb_struct(0, 7, 8),
	hcb_struct(1, 1, 0),
	hcb_struct(1, 0, 0, 0, 1),
	hcb_struct(1, 0, 1, 0, 0),
	hcb_struct(1, 0, 0, 1, 0),
	hcb_struct(0, 4, 5),
	hcb_struct(0, 5, 6),
	hcb_struct(0, 6, 7),
	hcb_struct(0, 7, 8),
	hcb_struct(1, 1, 1),
	hcb_struct(1, 0, 0, 1, 1),
	hcb_struct(0, 6, 7),
	hcb_struct(0, 7, 8),
	hcb_struct(0, 8, 9),
	hcb_struct(0, 9, 10),
	hcb_struct(0, 10, 11),
	hcb_struct(0, 11, 12),
	hcb_struct(1, 0, 1, 1, 0),
	hcb_struct(1, 0, 1, 0, 1),
	hcb_struct(1, 1, 0, 1, 0),
	hcb_struct(1, 0, 1, 1, 1),
	hcb_struct(1, 1, 0, 0, 1),
	hcb_struct(1, 1, 1, 1, 0),
	hcb_struct(0, 6, 7),
	hcb_struct(0, 7, 8),
	hcb_struct(0, 8, 9),
	hcb_struct(0, 9, 10),
	hcb_struct(0, 10, 11),
	hcb_struct(0, 11, 12),
	hcb_struct(1, 1, 1, 1, 1),
	hcb_struct(1, 1, 0, 1, 1),
	hcb_struct(1, 1, 1, 0, 1),
	hcb_struct(0, 9, 10),
	hcb_struct(0, 10, 11),
	hcb_struct(0, 11, 12),
	hcb_struct(0, 12, 13),
	hcb_struct(0, 13, 14),
	hcb_struct(0, 14, 15),
	hcb_struct(0, 15, 16),
	hcb_struct(0, 16, 17),
	hcb_struct(0, 17, 18),
	hcb_struct(1, 2, 0, 0, 0),
	hcb_struct(1, 0, 0, 0, 2),
	hcb_struct(1, 0, 0, 1, 2),
	hcb_struct(1, 2, 1, 0, 0),
	hcb_struct(1, 1, 2, 1, 0),
	hcb_struct(0, 13, 14),
	hcb_struct(0, 14, 15),
	hcb_struct(0, 15, 16),
	hcb_struct(0, 16, 17),
	hcb_struct(0, 17, 18),
	hcb_struct(0, 18, 19),
	hcb_struct(0, 19, 20),
	hcb_struct(0, 20, 21),
	hcb_struct(0, 21, 22),
	hcb_struct(0, 22, 23),
	hcb_struct(0, 23, 24),
	hcb_struct(0, 24, 25),
	hcb_struct(0, 25, 26),
	hcb_struct(1, 0, 0, 2, 1),
	hcb_struct(1, 0, 1, 2, 1),
	hcb_struct(1, 1, 2, 0, 0),
	hcb_struct(1, 0, 1, 1, 2),
	hcb_struct(1, 2, 1, 1, 0),
	hcb_struct(1, 0, 0, 2, 0),
	hcb_struct(1, 0, 2, 1, 0),
	hcb_struct(1, 0, 1, 2, 0),
	hcb_struct(1, 0, 2, 0, 0),
	hcb_struct(1, 0, 1, 0, 2),
	hcb_struct(1, 2, 0, 1, 0),
	hcb_struct(1, 1, 2, 1, 1),
	hcb_struct(1, 0, 2, 1, 1),
	hcb_struct(1, 1, 1, 2, 0),
	hcb_struct(1, 1, 1, 2, 1),
	hcb_struct(0, 11, 12),
	hcb_struct(0, 12, 13),
	hcb_struct(0, 13, 14),
	hcb_struct(0, 14, 15),
	hcb_struct(0, 15, 16),
	hcb_struct(0, 16, 17),
	hcb_struct(0, 17, 18),
	hcb_struct(0, 18, 19),
	hcb_struct(0, 19, 20),
	hcb_struct(0, 20, 21),
	hcb_struct(0, 21, 22),
	hcb_struct(1, 1, 2, 0, 1),
	hcb_struct(1, 1, 0, 2, 0),
	hcb_struct(1, 1, 0, 2, 1),
	hcb_struct(1, 0, 2, 0, 1),
	hcb_struct(1, 2, 1, 1, 1),
	hcb_struct(1, 1, 1, 1, 2),
	hcb_struct(1, 2, 1, 0, 1),
	hcb_struct(1, 1, 0, 1, 2),
	hcb_struct(1, 0, 0, 2, 2),
	hcb_struct(1, 0, 1, 2, 2),
	hcb_struct(1, 2, 2, 1, 0),
	hcb_struct(1, 1, 2, 2, 0),
	hcb_struct(1, 1, 0, 0, 2),
	hcb_struct(1, 2, 0, 0, 1),
	hcb_struct(1, 0, 2, 2, 1),
	hcb_struct(0, 7, 8),
	hcb_struct(0, 8, 9),
	hcb_struct(0, 9, 10),
	hcb_struct(0, 10, 11),
	hcb_struct(0, 11, 12),
	hcb_struct(0, 12, 13),
	hcb_struct(0, 13, 14),
	hcb_struct(1, 2, 2, 0, 0),
	hcb_struct(1, 1, 2, 2, 1),
	hcb_struct(1, 1, 1, 0, 2),
	hcb_struct(1, 2, 0, 1, 1),
	hcb_struct(1, 1, 1, 2, 2),
	hcb_struct(1, 2, 2, 1, 1),
	hcb_struct(1, 0, 2, 2, 0),
	hcb_struct(1, 0, 2, 1, 2),
	hcb_struct(0, 6, 7),
	hcb_struct(0, 7, 8),
	hcb_struct(0, 8, 9),
	hcb_struct(0, 9, 10),
	hcb_struct(0, 10, 11),
	hcb_struct(0, 11, 12),
	hcb_struct(1, 1, 0, 2, 2),
	hcb_struct(1, 2, 2, 0, 1),
	hcb_struct(1, 2, 1, 2, 0),
	hcb_struct(1, 2, 2, 2, 0),
	hcb_struct(1, 0, 2, 2, 2),
	hcb_struct(1, 2, 2, 2, 1),
	hcb_struct(1, 2, 1, 2, 1),
	hcb_struct(1, 1, 2, 1, 2),
	hcb_struct(1, 1, 2, 2, 2),
	hcb_struct(0, 3, 4),
	hcb_struct(0, 4, 5),
	hcb_struct(0, 5, 6),
	hcb_struct(1, 0, 2, 0, 2),
	hcb_struct(1, 2, 0, 2, 0),
	hcb_struct(1, 1, 2, 0, 2),
	hcb_struct(0, 3, 4),
	hcb_struct(0, 4, 5),
	hcb_struct(0, 5, 6),
	hcb_struct(1, 2, 0, 2, 1),
	hcb_struct(1, 2, 1, 1, 2),
	hcb_struct(1, 2, 1, 0, 2),
	hcb_struct(0, 3, 4),
	hcb_struct(0, 4, 5),
	hcb_struct(0, 5, 6),
	hcb_struct(1, 2, 2, 2, 2),
	hcb_struct(1, 2, 2, 1, 2),
	hcb_struct(1, 2, 1, 2, 2),
	hcb_struct(1, 2, 0, 1, 2),
	hcb_struct(1, 2, 0, 0, 2),
	hcb_struct(0, 1, 2),
	hcb_struct(1, 2, 2, 0, 2),
	hcb_struct(1, 2, 0, 2, 2),
]

# Spectrum Huffman Codebook 4
huffman_04_1 = [
	hcb_struct_1(0, 0),
	hcb_struct_1(0, 0),
	hcb_struct_1(1, 0),
	hcb_struct_1(1, 0),
	hcb_struct_1(2, 0),
	hcb_struct_1(2, 0),
	hcb_struct_1(3, 0),
	hcb_struct_1(3, 0),
	hcb_struct_1(4, 0),
	hcb_struct_1(4, 0),
	hcb_struct_1(5, 0),
	hcb_struct_1(5, 0),
	hcb_struct_1(6, 0),
	hcb_struct_1(6, 0),
	hcb_struct_1(7, 0),
	hcb_struct_1(7, 0),
	hcb_struct_1(8, 0),
	hcb_struct_1(8, 0),
	hcb_struct_1(9, 0),
	hcb_struct_1(9, 0),
	hcb_struct_1(10, 0),
	hcb_struct_1(11, 0),
	hcb_struct_1(12, 0),
	hcb_struct_1(13, 0),
	hcb_struct_1(14, 0),
	hcb_struct_1(15, 0),
	hcb_struct_1(16, 2),
	hcb_struct_1(20, 2),
	hcb_struct_1(24, 3),
	hcb_struct_1(32, 3),
	hcb_struct_1(40, 4),
	hcb_struct_1(56, 7),
]

huffman_04 = [
	hcb_struct(4, 1, 1, 1, 1),
	hcb_struct(4, 0, 1, 1, 1),
	hcb_struct(4, 1, 1, 0, 1),
	hcb_struct(4, 1, 1, 1, 0),
	hcb_struct(4, 1, 0, 1, 1),
	hcb_struct(4, 1, 0, 0, 0),
	hcb_struct(4, 1, 1, 0, 0),
	hcb_struct(4, 0, 0, 0, 0),
	hcb_struct(4, 0, 0, 1, 1),
	hcb_struct(4, 1, 0, 1, 0),
	hcb_struct(5, 1, 0, 0, 1),
	hcb_struct(5, 0, 1, 1, 0),
	hcb_struct(5, 0, 0, 0, 1),
	hcb_struct(5, 0, 1, 0, 1),
	hcb_struct(5, 0, 0, 1, 0),
	hcb_struct(5, 0, 1, 0, 0),
	hcb_struct(7, 2, 1, 1, 1),
	hcb_struct(7, 1, 1, 2, 1),
	hcb_struct(7, 1, 2, 1, 1),
	hcb_struct(7, 1, 1, 1, 2),
	hcb_struct(7, 2, 1, 1, 0),
	hcb_struct(7, 2, 1, 0, 1),
	hcb_struct(7, 1, 2, 1, 0),
	hcb_struct(7, 2, 0, 1, 1),
	hcb_struct(7, 0, 1, 2, 1),
	hcb_struct(7, 0, 1, 2, 1),
	hcb_struct(8, 0, 1, 1, 2),
	hcb_struct(8, 1, 1, 2, 0),
	hcb_struct(8, 0, 2, 1, 1),
	hcb_struct(8, 1, 0, 1, 2),
	hcb_struct(8, 1, 2, 0, 1),
	hcb_struct(8, 1, 1, 0, 2),
	hcb_struct(8, 1, 0, 2, 1),
	hcb_struct(8, 2, 1, 0, 0),
	hcb_struct(8, 2, 0, 1, 0),
	hcb_struct(8, 1, 2, 0, 0),
	hcb_struct(8, 2, 0, 0, 1),
	hcb_struct(8, 0, 1, 0, 2),
	hcb_struct(8, 0, 2, 1, 0),
	hcb_struct(8, 0, 0, 1, 2),
	hcb_struct(8, 0, 1, 2, 0),
	hcb_struct(8, 0, 1, 2, 0),
	hcb_struct(8, 0, 2, 0, 1),
	hcb_struct(8, 0, 2, 0, 1),
	hcb_struct(8, 1, 0, 0, 2),
	hcb_struct(8, 1, 0, 0, 2),
	hcb_struct(8, 0, 0, 2, 1),
	hcb_struct(8, 0, 0, 2, 1),
	hcb_struct(8, 1, 0, 2, 0),
	hcb_struct(8, 1, 0, 2, 0),
	hcb_struct(8, 2, 0, 0, 0),
	hcb_struct(8, 2, 0, 0, 0),
	hcb_struct(8, 0, 0, 0, 2),
	hcb_struct(8, 0, 0, 0, 2),
	hcb_struct(9, 0, 2, 0, 0),
	hcb_struct(9, 0, 0, 2, 0),
	hcb_struct(9, 1, 2, 2, 1),
	hcb_struct(9, 1, 2, 2, 1),
	hcb_struct(9, 1, 2, 2, 1),
	hcb_struct(9, 1, 2, 2, 1),
	hcb_struct(9, 1, 2, 2, 1),
	hcb_struct(9, 1, 2, 2, 1),
	hcb_struct(9, 1, 2, 2, 1),
	hcb_struct(9, 1, 2, 2, 1),
	hcb_struct(9, 2, 2, 1, 1),
	hcb_struct(9, 2, 2, 1, 1),
	hcb_struct(9, 2, 2, 1, 1),
	hcb_struct(9, 2, 2, 1, 1),
	hcb_struct(9, 2, 2, 1, 1),
	hcb_struct(9, 2, 2, 1, 1),
	hcb_struct(9, 2, 2, 1, 1),
	hcb_struct(9, 2, 2, 1, 1),
	hcb_struct(9, 2, 1, 2, 1),
	hcb_struct(9, 2, 1, 2, 1),
	hcb_struct(9, 2, 1, 2, 1),
	hcb_struct(9, 2, 1, 2, 1),
	hcb_struct(9, 2, 1, 2, 1),
	hcb_struct(9, 2, 1, 2, 1),
	hcb_struct(9, 2, 1, 2, 1),
	hcb_struct(9, 2, 1, 2, 1),
	hcb_struct(9, 1, 1, 2, 2),
	hcb_struct(9, 1, 1, 2, 2),
	hcb_struct(9, 1, 1, 2, 2),
	hcb_struct(9, 1, 1, 2, 2),
	hcb_struct(9, 1, 1, 2, 2),
	hcb_struct(9, 1, 1, 2, 2),
	hcb_struct(9, 1, 1, 2, 2),
	hcb_struct(9, 1, 1, 2, 2),
	hcb_struct(9, 1, 2, 1, 2),
	hcb_struct(9, 1, 2, 1, 2),
	hcb_struct(9, 1, 2, 1, 2),
	hcb_struct(9, 1, 2, 1, 2),
	hcb_struct(9, 1, 2, 1, 2),
	hcb_struct(9, 1, 2, 1, 2),
	hcb_struct(9, 1, 2, 1, 2),
	hcb_struct(9, 1, 2, 1, 2),
	hcb_struct(9, 2, 1, 1, 2),
	hcb_struct(9, 2, 1, 1, 2),
	hcb_struct(9, 2, 1, 1, 2),
	hcb_struct(9, 2, 1, 1, 2),
	hcb_struct(9, 2, 1, 1, 2),
	hcb_struct(9, 2, 1, 1, 2),
	hcb_struct(9, 2, 1, 1, 2),
	hcb_struct(9, 2, 1, 1, 2),
	hcb_struct(10, 1, 2, 2, 0),
	hcb_struct(10, 1, 2, 2, 0),
	hcb_struct(10, 1, 2, 2, 0),
	hcb_struct(10, 1, 2, 2, 0),
	hcb_struct(10, 2, 2, 1, 0),
	hcb_struct(10, 2, 2, 1, 0),
	hcb_struct(10, 2, 2, 1, 0),
	hcb_struct(10, 2, 2, 1, 0),
	hcb_struct(10, 2, 1, 2, 0),
	hcb_struct(10, 2, 1, 2, 0),
	hcb_struct(10, 2, 1, 2, 0),
	hcb_struct(10, 2, 1, 2, 0),
	hcb_struct(10, 0, 2, 2, 1),
	hcb_struct(10, 0, 2, 2, 1),
	hcb_struct(10, 0, 2, 2, 1),
	hcb_struct(10, 0, 2, 2, 1),
	hcb_struct(10, 0, 1, 2, 2),
	hcb_struct(10, 0, 1, 2, 2),
	hcb_struct(10, 0, 1, 2, 2),
	hcb_struct(10, 0, 1, 2, 2),
	hcb_struct(10, 2, 2, 0, 1),
	hcb_struct(10, 2, 2, 0, 1),
	hcb_struct(10, 2, 2, 0, 1),
	hcb_struct(10, 2, 2, 0, 1),
	hcb_struct(10, 0, 2, 1, 2),
	hcb_struct(10, 0, 2, 1, 2),
	hcb_struct(10, 0, 2, 1, 2),
	hcb_struct(10, 0, 2, 1, 2),
	hcb_struct(10, 2, 0, 2, 1),
	hcb_struct(10, 2, 0, 2, 1),
	hcb_struct(10, 2, 0, 2, 1),
	hcb_struct(10, 2, 0, 2, 1),
	hcb_struct(10, 1, 0, 2, 2),
	hcb_struct(10, 1, 0, 2, 2),
	hcb_struct(10, 1, 0, 2, 2),
	hcb_struct(10, 1, 0, 2, 2),
	hcb_struct(10, 2, 2, 2, 1),
	hcb_struct(10, 2, 2, 2, 1),
	hcb_struct(10, 2, 2, 2, 1),
	hcb_struct(10, 2, 2, 2, 1),
	hcb_struct(10, 1, 2, 0, 2),
	hcb_struct(10, 1, 2, 0, 2),
	hcb_struct(10, 1, 2, 0, 2),
	hcb_struct(10, 1, 2, 0, 2),
	hcb_struct(10, 2, 0, 1, 2),
	hcb_struct(10, 2, 0, 1, 2),
	hcb_struct(10, 2, 0, 1, 2),
	hcb_struct(10, 2, 0, 1, 2),
	hcb_struct(10, 2, 1, 0, 2),
	hcb_struct(10, 2, 1, 0, 2),
	hcb_struct(10, 2, 1, 0, 2),
	hcb_struct(10, 2, 1, 0, 2),
	hcb_struct(10, 1, 2, 2, 2),
	hcb_struct(10, 1, 2, 2, 2),
	hcb_struct(10, 1, 2, 2, 2),
	hcb_struct(10, 1, 2, 2, 2),
	hcb_struct(11, 2, 1, 2, 2),
	hcb_struct(11, 2, 1, 2, 2),
	hcb_struct(11, 2, 2, 1, 2),
	hcb_struct(11, 2, 2, 1, 2),
	hcb_struct(11, 0, 2, 2, 0),
	hcb_struct(11, 0, 2, 2, 0),
	hcb_struct(11, 2, 2, 0, 0),
	hcb_struct(11, 2, 2, 0, 0),
	hcb_struct(11, 0, 0, 2, 2),
	hcb_struct(11, 0, 0, 2, 2),
	hcb_struct(11, 2, 0, 2, 0),
	hcb_struct(11, 2, 0, 2, 0),
	hcb_struct(11, 0, 2, 0, 2),
	hcb_struct(11, 0, 2, 0, 2),
	hcb_struct(11, 2, 0, 0, 2),
	hcb_struct(11, 2, 0, 0, 2),
	hcb_struct(11, 2, 2, 2, 2),
	hcb_struct(11, 2, 2, 2, 2),
	hcb_struct(11, 0, 2, 2, 2),
	hcb_struct(11, 0, 2, 2, 2),
	hcb_struct(11, 2, 2, 2, 0),
	hcb_struct(11, 2, 2, 2, 0),
	hcb_struct(12, 2, 2, 0, 2),
	hcb_struct(12, 2, 0, 2, 2),
]

# Spectrum Huffman Codebook 5
huffman_05 = [
	hcb_struct(0, 1, 2),
	hcb_struct(1, 0, 0),
	hcb_struct(0, 1, 2),
	hcb_struct(0, 2, 3),
	hcb_struct(0, 3, 4),
	hcb_struct(0, 4, 5),
	hcb_struct(0, 5, 6),
	hcb_struct(0, 6, 7),
	hcb_struct(0, 7, 8),
	hcb_struct(1, -1, 0),
	hcb_struct(1, 1, 0),
	hcb_struct(1, 0, 1),
	hcb_struct(1, 0, -1),
	hcb_struct(0, 4, 5),
	hcb_struct(0, 5, 6),
	hcb_struct(0, 6, 7),
	hcb_struct(0, 7, 8),
	hcb_struct(1, 1, -1),
	hcb_struct(1, -1, 1),
	hcb_struct(1, -1, -1),
	hcb_struct(1, 1, 1),
	hcb_struct(0, 4, 5),
	hcb_struct(0, 5, 6),
	hcb_struct(0, 6, 7),
	hcb_struct(0, 7, 8),
	hcb_struct(0, 8, 9),
	hcb_struct(0, 9, 10),
	hcb_struct(0, 10, 11),
	hcb_struct(0, 11, 12),
	hcb_struct(0, 12, 13),
	hcb_struct(0, 13, 14),
	hcb_struct(0, 14, 15),
	hcb_struct(0, 15, 16),
	hcb_struct(1, -2, 0),
	hcb_struct(1, 0, 2),
	hcb_struct(1, 2, 0),
	hcb_struct(1, 0, -2),
	hcb_struct(0, 12, 13),
	hcb_struct(0, 13, 14),
	hcb_struct(0, 14, 15),
	hcb_struct(0, 15, 16),
	hcb_struct(0, 16, 17),
	hcb_struct(0, 17, 18),
	hcb_struct(0, 18, 19),
	hcb_struct(0, 19, 20),
	hcb_struct(0, 20, 21),
	hcb_struct(0, 21, 22),
	hcb_struct(0, 22, 23),
	hcb_struct(0, 23, 24),
	hcb_struct(1, -2, -1),
	hcb_struct(1, 2, 1),
	hcb_struct(1, -1, -2),
	hcb_struct(1, 1, 2),
	hcb_struct(1, -2, 1),
	hcb_struct(1, 2, -1),
	hcb_struct(1, -1, 2),
	hcb_struct(1, 1, -2),
	hcb_struct(1, -3, 0),
	hcb_struct(1, 3, 0),
	hcb_struct(1, 0, -3),
	hcb_struct(1, 0, 3),
	hcb_struct(0, 12, 13),
	hcb_struct(0, 13, 14),
	hcb_struct(0, 14, 15),
	hcb_struct(0, 15, 16),
	hcb_struct(0, 16, 17),
	hcb_struct(0, 17, 18),
	hcb_struct(0, 18, 19),
	hcb_struct(0, 19, 20),
	hcb_struct(0, 20, 21),
	hcb_struct(0, 21, 22),
	hcb_struct(0, 22, 23),
	hcb_struct(0, 23, 24),
	hcb_struct(1, -3, -1),
	hcb_struct(1, 1, 3),
	hcb_struct(1, 3, 1),
	hcb_struct(1, -1, -3),
	hcb_struct(1, -3, 1),
	hcb_struct(1, 3, -1),
	hcb_struct(1, 1, -3),
	hcb_struct(1, -1, 3),
	hcb_struct(1, -2, 2),
	hcb_struct(1, 2, 2),
	hcb_struct(1, -2, -2),
	hcb_struct(1, 2, -2),
	hcb_struct(0, 12, 13),
	hcb_struct(0, 13, 14),
	hcb_struct(0, 14, 15),
	hcb_struct(0, 15, 16),
	hcb_struct(0, 16, 17),
	hcb_struct(0, 17, 18),
	hcb_struct(0, 18, 19),
	hcb_struct(0, 19, 20),
	hcb_struct(0, 20, 21),
	hcb_struct(0, 21, 22),
	hcb_struct(0, 22, 23),
	hcb_struct(0, 23, 24),
	hcb_struct(1, -3, -2),
	hcb_struct(1, 3, -2),
	hcb_struct(1, -2, 3),
	hcb_struct(1, 2, -3),
	hcb_struct(1, 3, 2),
	hcb_struct(1, 2, 3),
	hcb_struct(1, -3, 2),
	hcb_struct(1, -2, -3),
	hcb_struct(1, 0, -4),
	hcb_struct(1, -4, 0),
	hcb_struct(1, 4, 1),
	hcb_struct(1, 4, 0),
	hcb_struct(0, 12, 13),
	hcb_struct(0, 13, 14),
	hcb_struct(0, 14, 15),
	hcb_struct(0, 15, 16),
	hcb_struct(0, 16, 17),
	hcb_struct(0, 17, 18),
	hcb_struct(0, 18, 19),
	hcb_struct(0, 19, 20),
	hcb_struct(0, 20, 21),
	hcb_struct(0, 21, 22),
	hcb_struct(0, 22, 23),
	hcb_struct(0, 23, 24),
	hcb_struct(1, -4, -1),
	hcb_struct(1, 0, 4),
	hcb_struct(1, 4, -1),
	hcb_struct(1, -1, -4),
	hcb_struct(1, 1, 4),
	hcb_struct(1, -1, 4),
	hcb_struct(1, -4, 1),
	hcb_struct(1, 1, -4),
	hcb_struct(1, 3, -3),
	hcb_struct(1, -3, -3),
	hcb_struct(1, -3, 3),
	hcb_struct(1, -2, 4),
	hcb_struct(1, -4, -2),
	hcb_struct(1, 4, 2),
	hcb_struct(1, 2, -4),
	hcb_struct(1, 2, 4),
	hcb_struct(1, 3, 3),
	hcb_struct(1, -4, 2),
	hcb_struct(0, 6, 7),
	hcb_struct(0, 7, 8),
	hcb_struct(0, 8, 9),
	hcb_struct(0, 9, 10),
	hcb_struct(0, 10, 11),
	hcb_struct(0, 11, 12),
	hcb_struct(1, -2, -4),
	hcb_struct(1, 4, -2),
	hcb_struct(1, 3, -4),
	hcb_struct(1, -4, -3),
	hcb_struct(1, -4, 3),
	hcb_struct(1, 3, 4),
	hcb_struct(1, -3, 4),
	hcb_struct(1, 4, 3),
	hcb_struct(1, 4, -3),
	hcb_struct(1, -3, -4),
	hcb_struct(0, 2, 3),
	hcb_struct(0, 3, 4),
	hcb_struct(1, 4, -4),
	hcb_struct(1, -4, 4),
	hcb_struct(1, 4, 4),
	hcb_struct(1, -4, -4),
]

# Spectrum Huffman Codebook 6
huffman_06_1 = [
	hcb_struct_1(0, 0),
	hcb_struct_1(0, 0),
	hcb_struct_1(1, 0),
	hcb_struct_1(1, 0),
	hcb_struct_1(2, 0),
	hcb_struct_1(2, 0),
	hcb_struct_1(3, 0),
	hcb_struct_1(3, 0),
	hcb_struct_1(4, 0),
	hcb_struct_1(4, 0),
	hcb_struct_1(5, 0),
	hcb_struct_1(5, 0),
	hcb_struct_1(6, 0),
	hcb_struct_1(6, 0),
	hcb_struct_1(7, 0),
	hcb_struct_1(7, 0),
	hcb_struct_1(8, 0),
	hcb_struct_1(8, 0),
	hcb_struct_1(9, 1),
	hcb_struct_1(11, 1),
	hcb_struct_1(13, 1),
	hcb_struct_1(15, 1),
	hcb_struct_1(17, 1),
	hcb_struct_1(19, 1),
	hcb_struct_1(21, 1),
	hcb_struct_1(23, 1),
	hcb_struct_1(25, 2),
	hcb_struct_1(29, 2),
	hcb_struct_1(33, 2),
	hcb_struct_1(37, 3),
	hcb_struct_1(45, 4),
	hcb_struct_1(61, 6),    
]

huffman_06 = [
	hcb_struct(4, 0, 0),
	hcb_struct(4, 1, 0),
	hcb_struct(4, 0, -1),
	hcb_struct(4, 0, 1),
	hcb_struct(4, -1, 0),
	hcb_struct(4, 1, 1),
	hcb_struct(4, -1, 1),
	hcb_struct(4, 1, -1),
	hcb_struct(4, -1, -1),
	hcb_struct(6, 2, -1),
	hcb_struct(6, 2, 1),
	hcb_struct(6, -2, 1),
	hcb_struct(6, -2, -1),
	hcb_struct(6, -2, 0),
	hcb_struct(6, -1, 2),
	hcb_struct(6, 2, 0),
	hcb_struct(6, 1, -2),
	hcb_struct(6, 1, 2),
	hcb_struct(6, 0, -2),
	hcb_struct(6, -1, -2),
	hcb_struct(6, 0, 2),
	hcb_struct(6, 2, -2),
	hcb_struct(6, -2, 2),
	hcb_struct(6, -2, -2),
	hcb_struct(6, 2, 2),
	hcb_struct(7, -3, 1),
	hcb_struct(7, 3, 1),
	hcb_struct(7, 3, -1),
	hcb_struct(7, -1, 3),
	hcb_struct(7, -3, -1),
	hcb_struct(7, 1, 3),
	hcb_struct(7, 1, -3),
	hcb_struct(7, -1, -3),
	hcb_struct(7, 3, 0),
	hcb_struct(7, -3, 0),
	hcb_struct(7, 0, -3),
	hcb_struct(7, 0, 3),
	hcb_struct(7, 3, 2),
	hcb_struct(7, 3, 2),
	hcb_struct(8, -3, -2),
	hcb_struct(8, -2, 3),
	hcb_struct(8, 2, 3),
	hcb_struct(8, 3, -2),
	hcb_struct(8, 2, -3),
	hcb_struct(8, -2, -3),
	hcb_struct(8, -3, 2),
	hcb_struct(8, -3, 2),
	hcb_struct(8, 3, 3),
	hcb_struct(8, 3, 3),
	hcb_struct(9, 3, -3),
	hcb_struct(9, -3, -3),
	hcb_struct(9, -3, 3),
	hcb_struct(9, 1, -4),
	hcb_struct(9, -1, -4),
	hcb_struct(9, 4, 1),
	hcb_struct(9, -4, 1),
	hcb_struct(9, -4, -1),
	hcb_struct(9, 1, 4),
	hcb_struct(9, 4, -1),
	hcb_struct(9, -1, 4),
	hcb_struct(9, 0, -4),
	hcb_struct(9, -4, 2),
	hcb_struct(9, -4, 2),
	hcb_struct(9, -4, 2),
	hcb_struct(9, -4, 2),
	hcb_struct(9, -4, -2),
	hcb_struct(9, -4, -2),
	hcb_struct(9, -4, -2),
	hcb_struct(9, -4, -2),
	hcb_struct(9, 2, 4),
	hcb_struct(9, 2, 4),
	hcb_struct(9, 2, 4),
	hcb_struct(9, 2, 4),
	hcb_struct(9, -2, -4),
	hcb_struct(9, -2, -4),
	hcb_struct(9, -2, -4),
	hcb_struct(9, -2, -4),
	hcb_struct(9, -4, 0),
	hcb_struct(9, -4, 0),
	hcb_struct(9, -4, 0),
	hcb_struct(9, -4, 0),
	hcb_struct(9, 4, 2),
	hcb_struct(9, 4, 2),
	hcb_struct(9, 4, 2),
	hcb_struct(9, 4, 2),
	hcb_struct(9, 4, -2),
	hcb_struct(9, 4, -2),
	hcb_struct(9, 4, -2),
	hcb_struct(9, 4, -2),
	hcb_struct(9, -2, 4),
	hcb_struct(9, -2, 4),
	hcb_struct(9, -2, 4),
	hcb_struct(9, -2, 4),
	hcb_struct(9, 4, 0),
	hcb_struct(9, 4, 0),
	hcb_struct(9, 4, 0),
	hcb_struct(9, 4, 0),
	hcb_struct(9, 2, -4),
	hcb_struct(9, 2, -4),
	hcb_struct(9, 2, -4),
	hcb_struct(9, 2, -4),
	hcb_struct(9, 0, 4),
	hcb_struct(9, 0, 4),
	hcb_struct(9, 0, 4),
	hcb_struct(9, 0, 4),
	hcb_struct(10, -3, -4),
	hcb_struct(10, -3, -4),
	hcb_struct(10, -3, 4),
	hcb_struct(10, -3, 4),
	hcb_struct(10, 3, -4),
	hcb_struct(10, 3, -4),
	hcb_struct(10, 4, -3),
	hcb_struct(10, 4, -3),
	hcb_struct(10, 3, 4),
	hcb_struct(10, 3, 4),
	hcb_struct(10, 4, 3),
	hcb_struct(10, 4, 3),
	hcb_struct(10, -4, 3),
	hcb_struct(10, -4, 3),
	hcb_struct(10, -4, -3),
	hcb_struct(10, -4, -3),
	hcb_struct(11, 4, 4),
	hcb_struct(11, -4, 4),
	hcb_struct(11, -4, -4),
	hcb_struct(11, 4, -4),
]

# Spectrum Huffman Codebook 7
huffman_07 = [
	hcb_struct(0, 1, 2),
	hcb_struct(1, 0, 0),
	hcb_struct(0, 1, 2),
	hcb_struct(0, 2, 3),
	hcb_struct(0, 3, 4),
	hcb_struct(1, 1, 0),
	hcb_struct(1, 0, 1),
	hcb_struct(0, 2, 3),
	hcb_struct(0, 3, 4),
	hcb_struct(1, 1, 1),
	hcb_struct(0, 3, 4),
	hcb_struct(0, 4, 5),
	hcb_struct(0, 5, 6),
	hcb_struct(0, 6, 7),
	hcb_struct(0, 7, 8),
	hcb_struct(0, 8, 9),
	hcb_struct(0, 9, 10),
	hcb_struct(0, 10, 11),
	hcb_struct(0, 11, 12),
	hcb_struct(1, 2, 1),
	hcb_struct(1, 1, 2),
	hcb_struct(1, 2, 0),
	hcb_struct(1, 0, 2),
	hcb_struct(0, 8, 9),
	hcb_struct(0, 9, 10),
	hcb_struct(0, 10, 11),
	hcb_struct(0, 11, 12),
	hcb_struct(0, 12, 13),
	hcb_struct(0, 13, 14),
	hcb_struct(0, 14, 15),
	hcb_struct(0, 15, 16),
	hcb_struct(1, 3, 1),
	hcb_struct(1, 1, 3),
	hcb_struct(1, 2, 2),
	hcb_struct(1, 3, 0),
	hcb_struct(1, 0, 3),
	hcb_struct(0, 11, 12),
	hcb_struct(0, 12, 13),
	hcb_struct(0, 13, 14),
	hcb_struct(0, 14, 15),
	hcb_struct(0, 15, 16),
	hcb_struct(0, 16, 17),
	hcb_struct(0, 17, 18),
	hcb_struct(0, 18, 19),
	hcb_struct(0, 19, 20),
	hcb_struct(0, 20, 21),
	hcb_struct(0, 21, 22),
	hcb_struct(1, 2, 3),
	hcb_struct(1, 3, 2),
	hcb_struct(1, 1, 4),
	hcb_struct(1, 4, 1),
	hcb_struct(1, 1, 5),
	hcb_struct(1, 5, 1),
	hcb_struct(1, 3, 3),
	hcb_struct(1, 2, 4),
	hcb_struct(1, 0, 4),
	hcb_struct(1, 4, 0),
	hcb_struct(0, 12, 13),
	hcb_struct(0, 13, 14),
	hcb_struct(0, 14, 15),
	hcb_struct(0, 15, 16),
	hcb_struct(0, 16, 17),
	hcb_struct(0, 17, 18),
	hcb_struct(0, 18, 19),
	hcb_struct(0, 19, 20),
	hcb_struct(0, 20, 21),
	hcb_struct(0, 21, 22),
	hcb_struct(0, 22, 23),
	hcb_struct(0, 23, 24),
	hcb_struct(1, 4, 2),
	hcb_struct(1, 2, 5),
	hcb_struct(1, 5, 2),
	hcb_struct(1, 0, 5),
	hcb_struct(1, 6, 1),
	hcb_struct(1, 5, 0),
	hcb_struct(1, 1, 6),
	hcb_struct(1, 4, 3),
	hcb_struct(1, 3, 5),
	hcb_struct(1, 3, 4),
	hcb_struct(1, 5, 3),
	hcb_struct(1, 2, 6),
	hcb_struct(1, 6, 2),
	hcb_struct(1, 1, 7),
	hcb_struct(0, 10, 11),
	hcb_struct(0, 11, 12),
	hcb_struct(0, 12, 13),
	hcb_struct(0, 13, 14),
	hcb_struct(0, 14, 15),
	hcb_struct(0, 15, 16),
	hcb_struct(0, 16, 17),
	hcb_struct(0, 17, 18),
	hcb_struct(0, 18, 19),
	hcb_struct(0, 19, 20),
	hcb_struct(1, 3, 6),
	hcb_struct(1, 0, 6),
	hcb_struct(1, 6, 0),
	hcb_struct(1, 4, 4),
	hcb_struct(1, 7, 1),
	hcb_struct(1, 4, 5),
	hcb_struct(1, 7, 2),
	hcb_struct(1, 5, 4),
	hcb_struct(1, 6, 3),
	hcb_struct(1, 2, 7),
	hcb_struct(1, 7, 3),
	hcb_struct(1, 6, 4),
	hcb_struct(1, 5, 5),
	hcb_struct(1, 4, 6),
	hcb_struct(1, 3, 7),
	hcb_struct(0, 5, 6),
	hcb_struct(0, 6, 7),
	hcb_struct(0, 7, 8),
	hcb_struct(0, 8, 9),
	hcb_struct(0, 9, 10),
	hcb_struct(1, 7, 0),
	hcb_struct(1, 0, 7),
	hcb_struct(1, 6, 5),
	hcb_struct(1, 5, 6),
	hcb_struct(1, 7, 4),
	hcb_struct(1, 4, 7),
	hcb_struct(1, 5, 7),
	hcb_struct(1, 7, 5),
	hcb_struct(0, 2, 3),
	hcb_struct(0, 3, 4),
	hcb_struct(1, 7, 6),
	hcb_struct(1, 6, 6),
	hcb_struct(1, 6, 7),
	hcb_struct(1, 7, 7),
]

# Spectrum Huffman Codebook 8
huffman_08_1 = [
	hcb_struct_1(0, 0),
	hcb_struct_1(0, 0),
	hcb_struct_1(0, 0),
	hcb_struct_1(0, 0),
	hcb_struct_1(1, 0),
	hcb_struct_1(1, 0),
	hcb_struct_1(2, 0),
	hcb_struct_1(2, 0),
	hcb_struct_1(3, 0),
	hcb_struct_1(3, 0),
	hcb_struct_1(4, 0),
	hcb_struct_1(4, 0),
	hcb_struct_1(5, 0),
	hcb_struct_1(5, 0),
	hcb_struct_1(6, 0),
	hcb_struct_1(7, 0),
	hcb_struct_1(8, 0),
	hcb_struct_1(9, 0),
	hcb_struct_1(10, 0),
	hcb_struct_1(11, 0),
	hcb_struct_1(12, 0),
	hcb_struct_1(13, 1),
	hcb_struct_1(15, 1),
	hcb_struct_1(17, 1),
	hcb_struct_1(19, 1),
	hcb_struct_1(21, 1),
	hcb_struct_1(23, 2),
	hcb_struct_1(27, 2),
	hcb_struct_1(31, 2),
	hcb_struct_1(35, 3),
	hcb_struct_1(43, 3),
	hcb_struct_1(51, 5),
]

huffman_08 = [
    hcb_struct(3, 1, 1),
	hcb_struct(4, 2, 1),
	hcb_struct(4, 1, 0),
	hcb_struct(4, 1, 2),
	hcb_struct(4, 0, 1),
	hcb_struct(4, 2, 2),
	hcb_struct(5, 0, 0),
	hcb_struct(5, 2, 0),
	hcb_struct(5, 0, 2),
	hcb_struct(5, 3, 1),
	hcb_struct(5, 1, 3),
	hcb_struct(5, 3, 2),
	hcb_struct(5, 2, 3),
	hcb_struct(6, 3, 3),
	hcb_struct(6, 4, 1),
	hcb_struct(6, 1, 4),
	hcb_struct(6, 4, 2),
	hcb_struct(6, 2, 4),
	hcb_struct(6, 3, 0),
	hcb_struct(6, 0, 3),
	hcb_struct(6, 4, 3),
	hcb_struct(6, 3, 4),
	hcb_struct(6, 5, 2),
	hcb_struct(7, 5, 1),
	hcb_struct(7, 2, 5),
	hcb_struct(7, 1, 5),
	hcb_struct(7, 5, 3),
	hcb_struct(7, 3, 5),
	hcb_struct(7, 4, 4),
	hcb_struct(7, 5, 4),
	hcb_struct(7, 0, 4),
	hcb_struct(7, 4, 5),
	hcb_struct(7, 4, 0),
	hcb_struct(7, 2, 6),
	hcb_struct(7, 6, 2),
	hcb_struct(7, 6, 1),
	hcb_struct(7, 6, 1),
	hcb_struct(7, 1, 6),
	hcb_struct(7, 1, 6),
	hcb_struct(8, 3, 6),
	hcb_struct(8, 6, 3),
	hcb_struct(8, 5, 5),
	hcb_struct(8, 5, 0),
	hcb_struct(8, 6, 4),
	hcb_struct(8, 0, 5),
	hcb_struct(8, 4, 6),
	hcb_struct(8, 7, 1),
	hcb_struct(8, 7, 2),
	hcb_struct(8, 2, 7),
	hcb_struct(8, 6, 5),
	hcb_struct(8, 7, 3),
	hcb_struct(8, 1, 7),
	hcb_struct(8, 1, 7),
	hcb_struct(8, 1, 7),
	hcb_struct(8, 1, 7),
	hcb_struct(8, 5, 6),
	hcb_struct(8, 5, 6),
	hcb_struct(8, 5, 6),
	hcb_struct(8, 5, 6),
	hcb_struct(8, 3, 7),
	hcb_struct(8, 3, 7),
	hcb_struct(8, 3, 7),
	hcb_struct(8, 3, 7),
	hcb_struct(9, 6, 6),
	hcb_struct(9, 6, 6),
	hcb_struct(9, 7, 4),
	hcb_struct(9, 7, 4),
	hcb_struct(9, 6, 0),
	hcb_struct(9, 6, 0),
	hcb_struct(9, 4, 7),
	hcb_struct(9, 4, 7),
	hcb_struct(9, 0, 6),
	hcb_struct(9, 0, 6),
	hcb_struct(9, 7, 5),
	hcb_struct(9, 7, 5),
	hcb_struct(9, 7, 6),
	hcb_struct(9, 7, 6),
	hcb_struct(9, 6, 7),
	hcb_struct(9, 6, 7),
	hcb_struct(10, 5, 7),
	hcb_struct(10, 7, 0),
	hcb_struct(10, 0, 7),
	hcb_struct(10, 7, 7),
]

# Spectrum Huffman Codebook 9
huffman_09 = [
	hcb_struct(0, 1, 2),
	hcb_struct(1, 0, 0),
	hcb_struct(0, 1, 2),
	hcb_struct(0, 2, 3),
	hcb_struct(0, 3, 4),
	hcb_struct(1, 1, 0),
	hcb_struct(1, 0, 1),
	hcb_struct(0, 2, 3),
	hcb_struct(0, 3, 4),
	hcb_struct(1, 1, 1),
	hcb_struct(0, 3, 4),
	hcb_struct(0, 4, 5),
	hcb_struct(0, 5, 6),
	hcb_struct(0, 6, 7),
	hcb_struct(0, 7, 8),
	hcb_struct(0, 8, 9),
	hcb_struct(0, 9, 10),
	hcb_struct(0, 10, 11),
	hcb_struct(0, 11, 12),
	hcb_struct(1, 2, 1),
	hcb_struct(1, 1, 2),
	hcb_struct(1, 2, 0),
	hcb_struct(1, 0, 2),
	hcb_struct(0, 8, 9),
	hcb_struct(0, 9, 10),
	hcb_struct(0, 10, 11),
	hcb_struct(0, 11, 12),
	hcb_struct(0, 12, 13),
	hcb_struct(0, 13, 14),
	hcb_struct(0, 14, 15),
	hcb_struct(0, 15, 16),
	hcb_struct(1, 3, 1),
	hcb_struct(1, 2, 2),
	hcb_struct(1, 1, 3),
	hcb_struct(0, 13, 14),
	hcb_struct(0, 14, 15),
	hcb_struct(0, 15, 16),
	hcb_struct(0, 16, 17),
	hcb_struct(0, 17, 18),
	hcb_struct(0, 18, 19),
	hcb_struct(0, 19, 20),
	hcb_struct(0, 20, 21),
	hcb_struct(0, 21, 22),
	hcb_struct(0, 22, 23),
	hcb_struct(0, 23, 24),
	hcb_struct(0, 24, 25),
	hcb_struct(0, 25, 26),
	hcb_struct(1, 3, 0),
	hcb_struct(1, 0, 3),
	hcb_struct(1, 2, 3),
	hcb_struct(1, 3, 2),
	hcb_struct(1, 1, 4),
	hcb_struct(1, 4, 1),
	hcb_struct(1, 2, 4),
	hcb_struct(1, 1, 5),
	hcb_struct(0, 18, 19),
	hcb_struct(0, 19, 20),
	hcb_struct(0, 20, 21),
	hcb_struct(0, 21, 22),
	hcb_struct(0, 22, 23),
	hcb_struct(0, 23, 24),
	hcb_struct(0, 24, 25),
	hcb_struct(0, 25, 26),
	hcb_struct(0, 26, 27),
	hcb_struct(0, 27, 28),
	hcb_struct(0, 28, 29),
	hcb_struct(0, 29, 30),
	hcb_struct(0, 30, 31),
	hcb_struct(0, 31, 32),
	hcb_struct(0, 32, 33),
	hcb_struct(0, 33, 34),
	hcb_struct(0, 34, 35),
	hcb_struct(0, 35, 36),
	hcb_struct(1, 4, 2),
	hcb_struct(1, 3, 3),
	hcb_struct(1, 0, 4),
	hcb_struct(1, 4, 0),
	hcb_struct(1, 5, 1),
	hcb_struct(1, 2, 5),
	hcb_struct(1, 1, 6),
	hcb_struct(1, 3, 4),
	hcb_struct(1, 5, 2),
	hcb_struct(1, 6, 1),
	hcb_struct(1, 4, 3),
	hcb_struct(0, 25, 26),
	hcb_struct(0, 26, 27),
	hcb_struct(0, 27, 28),
	hcb_struct(0, 28, 29),
	hcb_struct(0, 29, 30),
	hcb_struct(0, 30, 31),
	hcb_struct(0, 31, 32),
	hcb_struct(0, 32, 33),
	hcb_struct(0, 33, 34),
	hcb_struct(0, 34, 35),
	hcb_struct(0, 35, 36),
	hcb_struct(0, 36, 37),
	hcb_struct(0, 37, 38),
	hcb_struct(0, 38, 39),
	hcb_struct(0, 39, 40),
	hcb_struct(0, 40, 41),
	hcb_struct(0, 41, 42),
	hcb_struct(0, 42, 43),
	hcb_struct(0, 43, 44),
	hcb_struct(0, 44, 45),
	hcb_struct(0, 45, 46),
	hcb_struct(0, 46, 47),
	hcb_struct(0, 47, 48),
	hcb_struct(0, 48, 49),
	hcb_struct(0, 49, 50),
	hcb_struct(1, 0, 5),
	hcb_struct(1, 2, 6),
	hcb_struct(1, 5, 0),
	hcb_struct(1, 1, 7),
	hcb_struct(1, 3, 5),
	hcb_struct(1, 1, 8),
	hcb_struct(1, 8, 1),
	hcb_struct(1, 4, 4),
	hcb_struct(1, 5, 3),
	hcb_struct(1, 6, 2),
	hcb_struct(1, 7, 1),
	hcb_struct(1, 0, 6),
	hcb_struct(1, 8, 2),
	hcb_struct(1, 2, 8),
	hcb_struct(1, 3, 6),
	hcb_struct(1, 2, 7),
	hcb_struct(1, 4, 5),
	hcb_struct(1, 9, 1),
	hcb_struct(1, 1, 9),
	hcb_struct(1, 7, 2),
	hcb_struct(0, 30, 31),
	hcb_struct(0, 31, 32),
	hcb_struct(0, 32, 33),
	hcb_struct(0, 33, 34),
	hcb_struct(0, 34, 35),
	hcb_struct(0, 35, 36),
	hcb_struct(0, 36, 37),
	hcb_struct(0, 37, 38),
	hcb_struct(0, 38, 39),
	hcb_struct(0, 39, 40),
	hcb_struct(0, 40, 41),
	hcb_struct(0, 41, 42),
	hcb_struct(0, 42, 43),
	hcb_struct(0, 43, 44),
	hcb_struct(0, 44, 45),
	hcb_struct(0, 45, 46),
	hcb_struct(0, 46, 47),
	hcb_struct(0, 47, 48),
	hcb_struct(0, 48, 49),
	hcb_struct(0, 49, 50),
	hcb_struct(0, 50, 51),
	hcb_struct(0, 51, 52),
	hcb_struct(0, 52, 53),
	hcb_struct(0, 53, 54),
	hcb_struct(0, 54, 55),
	hcb_struct(0, 55, 56),
	hcb_struct(0, 56, 57),
	hcb_struct(0, 57, 58),
	hcb_struct(0, 58, 59),
	hcb_struct(0, 59, 60),
	hcb_struct(1, 6, 0),
	hcb_struct(1, 5, 4),
	hcb_struct(1, 6, 3),
	hcb_struct(1, 8, 3),
	hcb_struct(1, 0, 7),
	hcb_struct(1, 9, 2),
	hcb_struct(1, 3, 8),
	hcb_struct(1, 4, 6),
	hcb_struct(1, 3, 7),
	hcb_struct(1, 0, 8),
	hcb_struct(1, 10, 1),
	hcb_struct(1, 6, 4),
	hcb_struct(1, 2, 9),
	hcb_struct(1, 5, 5),
	hcb_struct(1, 8, 0),
	hcb_struct(1, 7, 0),
	hcb_struct(1, 7, 3),
	hcb_struct(1, 10, 2),
	hcb_struct(1, 9, 3),
	hcb_struct(1, 8, 4),
	hcb_struct(1, 1, 10),
	hcb_struct(1, 7, 4),
	hcb_struct(1, 6, 5),
	hcb_struct(1, 5, 6),
	hcb_struct(1, 4, 8),
	hcb_struct(1, 4, 7),
	hcb_struct(1, 3, 9),
	hcb_struct(1, 11, 1),
	hcb_struct(1, 5, 8),
	hcb_struct(1, 9, 0),
	hcb_struct(1, 8, 5),
	hcb_struct(0, 29, 30),
	hcb_struct(0, 30, 31),
	hcb_struct(0, 31, 32),
	hcb_struct(0, 32, 33),
	hcb_struct(0, 33, 34),
	hcb_struct(0, 34, 35),
	hcb_struct(0, 35, 36),
	hcb_struct(0, 36, 37),
	hcb_struct(0, 37, 38),
	hcb_struct(0, 38, 39),
	hcb_struct(0, 39, 40),
	hcb_struct(0, 40, 41),
	hcb_struct(0, 41, 42),
	hcb_struct(0, 42, 43),
	hcb_struct(0, 43, 44),
	hcb_struct(0, 44, 45),
	hcb_struct(0, 45, 46),
	hcb_struct(0, 46, 47),
	hcb_struct(0, 47, 48),
	hcb_struct(0, 48, 49),
	hcb_struct(0, 49, 50),
	hcb_struct(0, 50, 51),
	hcb_struct(0, 51, 52),
	hcb_struct(0, 52, 53),
	hcb_struct(0, 53, 54),
	hcb_struct(0, 54, 55),
	hcb_struct(0, 55, 56),
	hcb_struct(0, 56, 57),
	hcb_struct(0, 57, 58),
	hcb_struct(1, 10, 3),
	hcb_struct(1, 2, 10),
	hcb_struct(1, 0, 9),
	hcb_struct(1, 11, 2),
	hcb_struct(1, 9, 4),
	hcb_struct(1, 6, 6),
	hcb_struct(1, 12, 1),
	hcb_struct(1, 4, 9),
	hcb_struct(1, 8, 6),
	hcb_struct(1, 1, 11),
	hcb_struct(1, 9, 5),
	hcb_struct(1, 10, 4),
	hcb_struct(1, 5, 7),
	hcb_struct(1, 7, 5),
	hcb_struct(1, 2, 11),
	hcb_struct(1, 1, 12),
	hcb_struct(1, 12, 2),
	hcb_struct(1, 11, 3),
	hcb_struct(1, 3, 10),
	hcb_struct(1, 5, 9),
	hcb_struct(1, 6, 7),
	hcb_struct(1, 8, 7),
	hcb_struct(1, 11, 4),
	hcb_struct(1, 0, 10),
	hcb_struct(1, 7, 6),
	hcb_struct(1, 12, 3),
	hcb_struct(1, 10, 0),
	hcb_struct(1, 10, 5),
	hcb_struct(1, 4, 10),
	hcb_struct(1, 6, 8),
	hcb_struct(1, 2, 12),
	hcb_struct(1, 9, 6),
	hcb_struct(1, 9, 7),
	hcb_struct(1, 4, 11),
	hcb_struct(1, 11, 0),
	hcb_struct(1, 6, 9),
	hcb_struct(1, 3, 11),
	hcb_struct(1, 5, 10),
	hcb_struct(0, 20, 21),
	hcb_struct(0, 21, 22),
	hcb_struct(0, 22, 23),
	hcb_struct(0, 23, 24),
	hcb_struct(0, 24, 25),
	hcb_struct(0, 25, 26),
	hcb_struct(0, 26, 27),
	hcb_struct(0, 27, 28),
	hcb_struct(0, 28, 29),
	hcb_struct(0, 29, 30),
	hcb_struct(0, 30, 31),
	hcb_struct(0, 31, 32),
	hcb_struct(0, 32, 33),
	hcb_struct(0, 33, 34),
	hcb_struct(0, 34, 35),
	hcb_struct(0, 35, 36),
	hcb_struct(0, 36, 37),
	hcb_struct(0, 37, 38),
	hcb_struct(0, 38, 39),
	hcb_struct(0, 39, 40),
	hcb_struct(1, 8, 8),
	hcb_struct(1, 7, 8),
	hcb_struct(1, 12, 5),
	hcb_struct(1, 3, 12),
	hcb_struct(1, 11, 5),
	hcb_struct(1, 7, 7),
	hcb_struct(1, 12, 4),
	hcb_struct(1, 11, 6),
	hcb_struct(1, 10, 6),
	hcb_struct(1, 4, 12),
	hcb_struct(1, 7, 9),
	hcb_struct(1, 5, 11),
	hcb_struct(1, 0, 11),
	hcb_struct(1, 12, 6),
	hcb_struct(1, 6, 10),
	hcb_struct(1, 12, 0),
	hcb_struct(1, 10, 7),
	hcb_struct(1, 5, 12),
	hcb_struct(1, 7, 10),
	hcb_struct(1, 9, 8),
	hcb_struct(1, 0, 12),
	hcb_struct(1, 11, 7),
	hcb_struct(1, 8, 9),
	hcb_struct(1, 9, 9),
	hcb_struct(1, 10, 8),
	hcb_struct(1, 7, 11),
	hcb_struct(1, 12, 7),
	hcb_struct(1, 6, 11),
	hcb_struct(1, 8, 11),
	hcb_struct(1, 11, 8),
	hcb_struct(1, 7, 12),
	hcb_struct(1, 6, 12),
	hcb_struct(0, 8, 9),
	hcb_struct(0, 9, 10),
	hcb_struct(0, 10, 11),
	hcb_struct(0, 11, 12),
	hcb_struct(0, 12, 13),
	hcb_struct(0, 13, 14),
	hcb_struct(0, 14, 15),
	hcb_struct(0, 15, 16),
	hcb_struct(1, 8, 10),
	hcb_struct(1, 10, 9),
	hcb_struct(1, 8, 12),
	hcb_struct(1, 9, 10),
	hcb_struct(1, 9, 11),
	hcb_struct(1, 9, 12),
	hcb_struct(1, 10, 11),
	hcb_struct(1, 12, 9),
	hcb_struct(1, 10, 10),
	hcb_struct(1, 11, 9),
	hcb_struct(1, 12, 8),
	hcb_struct(1, 11, 10),
	hcb_struct(1, 12, 10),
	hcb_struct(1, 12, 11),
	hcb_struct(0, 2, 3),
	hcb_struct(0, 3, 4),
	hcb_struct(1, 10, 12),
	hcb_struct(1, 11, 11),
	hcb_struct(1, 11, 12),
	hcb_struct(1, 12, 12),
]

# Spectrum Huffman Codebook 10
huffman_10_1 = [
	hcb_struct_1(0, 0),
	hcb_struct_1(0, 0),
	hcb_struct_1(0, 0),
	hcb_struct_1(0, 0),
	hcb_struct_1(1, 0),
	hcb_struct_1(1, 0),
	hcb_struct_1(1, 0),
	hcb_struct_1(1, 0),
	hcb_struct_1(2, 0),
	hcb_struct_1(2, 0),
	hcb_struct_1(2, 0),
	hcb_struct_1(2, 0),
	hcb_struct_1(3, 0),
	hcb_struct_1(3, 0),
	hcb_struct_1(4, 0),
	hcb_struct_1(4, 0),
	hcb_struct_1(5, 0),
	hcb_struct_1(5, 0),
	hcb_struct_1(6, 0),
	hcb_struct_1(6, 0),
	hcb_struct_1(7, 0),
	hcb_struct_1(7, 0),
	hcb_struct_1(8, 0),
	hcb_struct_1(8, 0),
	hcb_struct_1(9, 0),
	hcb_struct_1(9, 0),
	hcb_struct_1(10, 0),
	hcb_struct_1(10, 0),
	hcb_struct_1(11, 0),
	hcb_struct_1(12, 0),
	hcb_struct_1(13, 0),
	hcb_struct_1(14, 0),
	hcb_struct_1(15, 0),
	hcb_struct_1(16, 0),
	hcb_struct_1(17, 0),
	hcb_struct_1(18, 0),
	hcb_struct_1(19, 0),
	hcb_struct_1(20, 0),
	hcb_struct_1(21, 0),
	hcb_struct_1(22, 0),
	hcb_struct_1(23, 0),
	hcb_struct_1(24, 0),
	hcb_struct_1(25, 1),
	hcb_struct_1(27, 1),
	hcb_struct_1(29, 1),
	hcb_struct_1(31, 1),
	hcb_struct_1(33, 1),
	hcb_struct_1(35, 1),
	hcb_struct_1(37, 1),
	hcb_struct_1(39, 1),
	hcb_struct_1(41, 2),
	hcb_struct_1(45, 2),
	hcb_struct_1(49, 2),
	hcb_struct_1(53, 2),
	hcb_struct_1(57, 2),
	hcb_struct_1(61, 2),
	hcb_struct_1(65, 3),
	hcb_struct_1(73, 3),
	hcb_struct_1(81, 3),
	hcb_struct_1(89, 3),
	hcb_struct_1(97, 4),
	hcb_struct_1(113, 4),
	hcb_struct_1(129, 4),
	hcb_struct_1(145, 6),    
]

huffman_10 = [
	hcb_struct(4, 1, 1),
	hcb_struct(4, 1, 2),
	hcb_struct(4, 2, 1),
	hcb_struct(5, 2, 2),
	hcb_struct(5, 1, 0),
	hcb_struct(5, 0, 1),
	hcb_struct(5, 1, 3),
	hcb_struct(5, 3, 2),
	hcb_struct(5, 3, 1),
	hcb_struct(5, 2, 3),
	hcb_struct(5, 3, 3),
	hcb_struct(6, 2, 0),
	hcb_struct(6, 0, 2),
	hcb_struct(6, 2, 4),
	hcb_struct(6, 4, 2),
	hcb_struct(6, 1, 4),
	hcb_struct(6, 4, 1),
	hcb_struct(6, 0, 0),
	hcb_struct(6, 4, 3),
	hcb_struct(6, 3, 4),
	hcb_struct(6, 3, 0),
	hcb_struct(6, 0, 3),
	hcb_struct(6, 4, 4),
	hcb_struct(6, 2, 5),
	hcb_struct(6, 5, 2),
	hcb_struct(7, 1, 5),
	hcb_struct(7, 5, 1),
	hcb_struct(7, 5, 3),
	hcb_struct(7, 3, 5),
	hcb_struct(7, 5, 4),
	hcb_struct(7, 4, 5),
	hcb_struct(7, 6, 2),
	hcb_struct(7, 2, 6),
	hcb_struct(7, 6, 3),
	hcb_struct(7, 4, 0),
	hcb_struct(7, 6, 1),
	hcb_struct(7, 0, 4),
	hcb_struct(7, 1, 6),
	hcb_struct(7, 3, 6),
	hcb_struct(7, 5, 5),
	hcb_struct(7, 6, 4),
	hcb_struct(7, 4, 6),
	hcb_struct(7, 4, 6),
	hcb_struct(8, 6, 5),
	hcb_struct(8, 7, 2),
	hcb_struct(8, 3, 7),
	hcb_struct(8, 2, 7),
	hcb_struct(8, 5, 6),
	hcb_struct(8, 8, 2),
	hcb_struct(8, 7, 3),
	hcb_struct(8, 5, 0),
	hcb_struct(8, 7, 1),
	hcb_struct(8, 0, 5),
	hcb_struct(8, 8, 1),
	hcb_struct(8, 1, 7),
	hcb_struct(8, 8, 3),
	hcb_struct(8, 7, 4),
	hcb_struct(8, 4, 7),
	hcb_struct(8, 2, 8),
	hcb_struct(8, 6, 6),
	hcb_struct(8, 7, 5),
	hcb_struct(8, 1, 8),
	hcb_struct(8, 3, 8),
	hcb_struct(8, 8, 4),
	hcb_struct(8, 4, 8),
	hcb_struct(8, 5, 7),
	hcb_struct(8, 5, 7),
	hcb_struct(8, 8, 5),
	hcb_struct(8, 8, 5),
	hcb_struct(8, 5, 8),
	hcb_struct(8, 5, 8),
	hcb_struct(9, 7, 6),
	hcb_struct(9, 6, 7),
	hcb_struct(9, 9, 2),
	hcb_struct(9, 6, 0),
	hcb_struct(9, 6, 8),
	hcb_struct(9, 9, 3),
	hcb_struct(9, 3, 9),
	hcb_struct(9, 9, 1),
	hcb_struct(9, 2, 9),
	hcb_struct(9, 0, 6),
	hcb_struct(9, 8, 6),
	hcb_struct(9, 9, 4),
	hcb_struct(9, 4, 9),
	hcb_struct(9, 10, 2),
	hcb_struct(9, 1, 9),
	hcb_struct(9, 7, 7),
	hcb_struct(9, 8, 7),
	hcb_struct(9, 9, 5),
	hcb_struct(9, 7, 8),
	hcb_struct(9, 10, 3),
	hcb_struct(9, 5, 9),
	hcb_struct(9, 10, 4),
	hcb_struct(9, 2, 10),
	hcb_struct(9, 10, 1),
	hcb_struct(9, 3, 10),
	hcb_struct(9, 9, 6),
	hcb_struct(9, 6, 9),
	hcb_struct(9, 6, 9),
	hcb_struct(9, 8, 0),
	hcb_struct(9, 8, 0),
	hcb_struct(9, 4, 10),
	hcb_struct(9, 4, 10),
	hcb_struct(9, 7, 0),
	hcb_struct(9, 7, 0),
	hcb_struct(9, 11, 2),
	hcb_struct(9, 11, 2),
	hcb_struct(10, 7, 9),
	hcb_struct(10, 11, 3),
	hcb_struct(10, 10, 6),
	hcb_struct(10, 1, 10),
	hcb_struct(10, 11, 1),
	hcb_struct(10, 9, 7),
	hcb_struct(10, 0, 7),
	hcb_struct(10, 8, 8),
	hcb_struct(10, 10, 5),
	hcb_struct(10, 3, 11),
	hcb_struct(10, 5, 10),
	hcb_struct(10, 8, 9),
	hcb_struct(10, 11, 5),
	hcb_struct(10, 0, 8),
	hcb_struct(10, 11, 4),
	hcb_struct(10, 2, 11),
	hcb_struct(10, 7, 10),
	hcb_struct(10, 6, 10),
	hcb_struct(10, 10, 7),
	hcb_struct(10, 4, 11),
	hcb_struct(10, 1, 11),
	hcb_struct(10, 12, 2),
	hcb_struct(10, 9, 8),
	hcb_struct(10, 12, 3),
	hcb_struct(10, 11, 6),
	hcb_struct(10, 5, 11),
	hcb_struct(10, 12, 4),
	hcb_struct(10, 11, 7),
	hcb_struct(10, 12, 5),
	hcb_struct(10, 3, 12),
	hcb_struct(10, 6, 11),
	hcb_struct(10, 9, 0),
	hcb_struct(10, 10, 8),
	hcb_struct(10, 10, 0),
	hcb_struct(10, 12, 1),
	hcb_struct(10, 0, 9),
	hcb_struct(10, 4, 12),
	hcb_struct(10, 9, 9),
	hcb_struct(10, 12, 6),
	hcb_struct(10, 12, 6),
	hcb_struct(10, 12, 6),
	hcb_struct(10, 12, 6),
	hcb_struct(10, 2, 12),
	hcb_struct(10, 2, 12),
	hcb_struct(10, 2, 12),
	hcb_struct(10, 2, 12),
	hcb_struct(10, 8, 10),
	hcb_struct(10, 8, 10),
	hcb_struct(10, 8, 10),
	hcb_struct(10, 8, 10),
	hcb_struct(11, 9, 10),
	hcb_struct(11, 9, 10),
	hcb_struct(11, 1, 12),
	hcb_struct(11, 1, 12),
	hcb_struct(11, 11, 8),
	hcb_struct(11, 11, 8),
	hcb_struct(11, 12, 7),
	hcb_struct(11, 12, 7),
	hcb_struct(11, 7, 11),
	hcb_struct(11, 7, 11),
	hcb_struct(11, 5, 12),
	hcb_struct(11, 5, 12),
	hcb_struct(11, 6, 12),
	hcb_struct(11, 6, 12),
	hcb_struct(11, 10, 9),
	hcb_struct(11, 10, 9),
	hcb_struct(11, 8, 11),
	hcb_struct(11, 8, 11),
	hcb_struct(11, 12, 8),
	hcb_struct(11, 12, 8),
	hcb_struct(11, 0, 10),
	hcb_struct(11, 0, 10),
	hcb_struct(11, 7, 12),
	hcb_struct(11, 7, 12),
	hcb_struct(11, 11, 0),
	hcb_struct(11, 11, 0),
	hcb_struct(11, 10, 10),
	hcb_struct(11, 10, 10),
	hcb_struct(11, 11, 9),
	hcb_struct(11, 11, 9),
	hcb_struct(11, 11, 10),
	hcb_struct(11, 11, 10),
	hcb_struct(11, 0, 11),
	hcb_struct(11, 0, 11),
	hcb_struct(11, 11, 11),
	hcb_struct(11, 11, 11),
	hcb_struct(11, 9, 11),
	hcb_struct(11, 9, 11),
	hcb_struct(11, 10, 11),
	hcb_struct(11, 10, 11),
	hcb_struct(11, 12, 0),
	hcb_struct(11, 12, 0),
	hcb_struct(11, 8, 12),
	hcb_struct(11, 8, 12),
	hcb_struct(12, 12, 9),
	hcb_struct(12, 10, 12),
	hcb_struct(12, 9, 12),
	hcb_struct(12, 11, 12),
	hcb_struct(12, 12, 11),
	hcb_struct(12, 0, 12),
	hcb_struct(12, 12, 10),
	hcb_struct(12, 12, 12),    
]

# Spectrum Huffman Codebook 11
huffman_11_1 = [
    hcb_struct_1(0, 0),
	hcb_struct_1(0, 0),
	hcb_struct_1(1, 0),
	hcb_struct_1(1, 0),
	hcb_struct_1(2, 0),
	hcb_struct_1(3, 0),
	hcb_struct_1(4, 0),
	hcb_struct_1(5, 0),
	hcb_struct_1(6, 0),
	hcb_struct_1(7, 0),
	hcb_struct_1(8, 1),
	hcb_struct_1(10, 1),
	hcb_struct_1(12, 1),
	hcb_struct_1(14, 2),
	hcb_struct_1(18, 2),
	hcb_struct_1(22, 2),
	hcb_struct_1(26, 2),
	hcb_struct_1(30, 3),
	hcb_struct_1(38, 3),
	hcb_struct_1(46, 3),
	hcb_struct_1(54, 3),
	hcb_struct_1(62, 3),
	hcb_struct_1(70, 3),
	hcb_struct_1(78, 3),
	hcb_struct_1(86, 4),
	hcb_struct_1(102, 4),
	hcb_struct_1(118, 4),
	hcb_struct_1(134, 4),
	hcb_struct_1(150, 5),
	hcb_struct_1(182, 5),
	hcb_struct_1(214, 5),
	hcb_struct_1(246, 7),
]

huffman_11 = [
	hcb_struct(4, 0, 0),
	hcb_struct(4, 1, 1),
	hcb_struct(5, 16, 16),
	hcb_struct(5, 1, 0),
	hcb_struct(5, 0, 1),
	hcb_struct(5, 2, 1),
	hcb_struct(5, 1, 2),
	hcb_struct(5, 2, 2),
	hcb_struct(6, 1, 3),
	hcb_struct(6, 3, 1),
	hcb_struct(6, 3, 2),
	hcb_struct(6, 2, 0),
	hcb_struct(6, 2, 3),
	hcb_struct(6, 0, 2),
	hcb_struct(6, 3, 3),
	hcb_struct(6, 3, 3),
	hcb_struct(7, 4, 1),
	hcb_struct(7, 1, 4),
	hcb_struct(7, 4, 2),
	hcb_struct(7, 2, 4),
	hcb_struct(7, 4, 3),
	hcb_struct(7, 3, 4),
	hcb_struct(7, 3, 0),
	hcb_struct(7, 0, 3),
	hcb_struct(7, 5, 1),
	hcb_struct(7, 5, 2),
	hcb_struct(7, 2, 5),
	hcb_struct(7, 4, 4),
	hcb_struct(7, 1, 5),
	hcb_struct(7, 5, 3),
	hcb_struct(7, 3, 5),
	hcb_struct(7, 3, 5),
	hcb_struct(7, 5, 4),
	hcb_struct(7, 5, 4),
	hcb_struct(8, 4, 5),
	hcb_struct(8, 6, 2),
	hcb_struct(8, 2, 6),
	hcb_struct(8, 6, 1),
	hcb_struct(8, 6, 3),
	hcb_struct(8, 3, 6),
	hcb_struct(8, 1, 6),
	hcb_struct(8, 4, 16),
	hcb_struct(8, 3, 16),
	hcb_struct(8, 16, 5),
	hcb_struct(8, 16, 3),
	hcb_struct(8, 16, 4),
	hcb_struct(8, 6, 4),
	hcb_struct(8, 16, 6),
	hcb_struct(8, 4, 0),
	hcb_struct(8, 4, 6),
	hcb_struct(8, 0, 4),
	hcb_struct(8, 2, 16),
	hcb_struct(8, 5, 5),
	hcb_struct(8, 5, 16),
	hcb_struct(8, 16, 7),
	hcb_struct(8, 16, 2),
	hcb_struct(8, 16, 8),
	hcb_struct(8, 2, 7),
	hcb_struct(8, 7, 2),
	hcb_struct(8, 3, 7),
	hcb_struct(8, 6, 5),
	hcb_struct(8, 5, 6),
	hcb_struct(8, 6, 16),
	hcb_struct(8, 16, 10),
	hcb_struct(8, 7, 3),
	hcb_struct(8, 7, 1),
	hcb_struct(8, 16, 9),
	hcb_struct(8, 7, 16),
	hcb_struct(8, 1, 16),
	hcb_struct(8, 1, 7),
	hcb_struct(8, 4, 7),
	hcb_struct(8, 16, 11),
	hcb_struct(8, 7, 4),
	hcb_struct(8, 16, 12),
	hcb_struct(8, 8, 16),
	hcb_struct(8, 16, 1),
	hcb_struct(8, 6, 6),
	hcb_struct(8, 9, 16),
	hcb_struct(8, 2, 8),
	hcb_struct(8, 5, 7),
	hcb_struct(8, 10, 16),
	hcb_struct(8, 16, 13),
	hcb_struct(8, 8, 3),
	hcb_struct(8, 8, 2),
	hcb_struct(8, 3, 8),
	hcb_struct(8, 5, 0),
	hcb_struct(8, 16, 14),
	hcb_struct(8, 16, 14),
	hcb_struct(8, 11, 16),
	hcb_struct(8, 11, 16),
	hcb_struct(8, 7, 5),
	hcb_struct(8, 7, 5),
	hcb_struct(8, 4, 8),
	hcb_struct(8, 4, 8),
	hcb_struct(8, 6, 7),
	hcb_struct(8, 6, 7),
	hcb_struct(8, 7, 6),
	hcb_struct(8, 7, 6),
	hcb_struct(8, 0, 5),
	hcb_struct(8, 0, 5),
	hcb_struct(9, 8, 4),
	hcb_struct(9, 16, 15),
	hcb_struct(9, 12, 16),
	hcb_struct(9, 1, 8),
	hcb_struct(9, 8, 1),
	hcb_struct(9, 14, 16),
	hcb_struct(9, 5, 8),
	hcb_struct(9, 13, 16),
	hcb_struct(9, 3, 9),
	hcb_struct(9, 8, 5),
	hcb_struct(9, 7, 7),
	hcb_struct(9, 2, 9),
	hcb_struct(9, 8, 6),
	hcb_struct(9, 9, 2),
	hcb_struct(9, 9, 3),
	hcb_struct(9, 15, 16),
	hcb_struct(9, 4, 9),
	hcb_struct(9, 6, 8),
	hcb_struct(9, 6, 0),
	hcb_struct(9, 9, 4),
	hcb_struct(9, 5, 9),
	hcb_struct(9, 8, 7),
	hcb_struct(9, 7, 8),
	hcb_struct(9, 1, 9),
	hcb_struct(9, 10, 3),
	hcb_struct(9, 0, 6),
	hcb_struct(9, 10, 2),
	hcb_struct(9, 9, 1),
	hcb_struct(9, 9, 5),
	hcb_struct(9, 4, 10),
	hcb_struct(9, 2, 10),
	hcb_struct(9, 9, 6),
	hcb_struct(9, 3, 10),
	hcb_struct(9, 6, 9),
	hcb_struct(9, 10, 4),
	hcb_struct(9, 8, 8),
	hcb_struct(9, 10, 5),
	hcb_struct(9, 9, 7),
	hcb_struct(9, 11, 3),
	hcb_struct(9, 1, 10),
	hcb_struct(9, 7, 0),
	hcb_struct(9, 10, 6),
	hcb_struct(9, 7, 9),
	hcb_struct(9, 3, 11),
	hcb_struct(9, 5, 10),
	hcb_struct(9, 10, 1),
	hcb_struct(9, 4, 11),
	hcb_struct(9, 11, 2),
	hcb_struct(9, 13, 2),
	hcb_struct(9, 6, 10),
	hcb_struct(9, 13, 3),
	hcb_struct(9, 13, 3),
	hcb_struct(9, 2, 11),
	hcb_struct(9, 2, 11),
	hcb_struct(9, 16, 0),
	hcb_struct(9, 16, 0),
	hcb_struct(9, 5, 11),
	hcb_struct(9, 5, 11),
	hcb_struct(9, 11, 5),
	hcb_struct(9, 11, 5),
	hcb_struct(10, 11, 4),
	hcb_struct(10, 9, 8),
	hcb_struct(10, 7, 10),
	hcb_struct(10, 8, 9),
	hcb_struct(10, 0, 16),
	hcb_struct(10, 4, 13),
	hcb_struct(10, 0, 7),
	hcb_struct(10, 3, 13),
	hcb_struct(10, 11, 6),
	hcb_struct(10, 13, 1),
	hcb_struct(10, 13, 4),
	hcb_struct(10, 12, 3),
	hcb_struct(10, 2, 13),
	hcb_struct(10, 13, 5),
	hcb_struct(10, 8, 10),
	hcb_struct(10, 6, 11),
	hcb_struct(10, 10, 8),
	hcb_struct(10, 10, 7),
	hcb_struct(10, 14, 2),
	hcb_struct(10, 12, 4),
	hcb_struct(10, 1, 11),
	hcb_struct(10, 4, 12),
	hcb_struct(10, 11, 1),
	hcb_struct(10, 3, 12),
	hcb_struct(10, 1, 13),
	hcb_struct(10, 12, 2),
	hcb_struct(10, 7, 11),
	hcb_struct(10, 3, 14),
	hcb_struct(10, 5, 12),
	hcb_struct(10, 5, 13),
	hcb_struct(10, 14, 4),
	hcb_struct(10, 4, 14),
	hcb_struct(10, 11, 7),
	hcb_struct(10, 14, 3),
	hcb_struct(10, 12, 5),
	hcb_struct(10, 13, 6),
	hcb_struct(10, 12, 6),
	hcb_struct(10, 8, 0),
	hcb_struct(10, 11, 8),
	hcb_struct(10, 2, 12),
	hcb_struct(10, 9, 9),
	hcb_struct(10, 14, 5),
	hcb_struct(10, 6, 13),
	hcb_struct(10, 10, 10),
	hcb_struct(10, 15, 2),
	hcb_struct(10, 8, 11),
	hcb_struct(10, 9, 10),
	hcb_struct(10, 14, 6),
	hcb_struct(10, 10, 9),
	hcb_struct(10, 5, 14),
	hcb_struct(10, 11, 9),
	hcb_struct(10, 14, 1),
	hcb_struct(10, 2, 14),
	hcb_struct(10, 6, 12),
	hcb_struct(10, 1, 12),
	hcb_struct(10, 13, 8),
	hcb_struct(10, 0, 8),
	hcb_struct(10, 13, 7),
	hcb_struct(10, 7, 12),
	hcb_struct(10, 12, 7),
	hcb_struct(10, 7, 13),
	hcb_struct(10, 15, 3),
	hcb_struct(10, 12, 1),
	hcb_struct(10, 6, 14),
	hcb_struct(10, 2, 15),
	hcb_struct(10, 15, 5),
	hcb_struct(10, 15, 4),
	hcb_struct(10, 1, 14),
	hcb_struct(10, 9, 11),
	hcb_struct(10, 4, 15),
	hcb_struct(10, 14, 7),
	hcb_struct(10, 8, 13),
	hcb_struct(10, 13, 9),
	hcb_struct(10, 8, 12),
	hcb_struct(10, 5, 15),
	hcb_struct(10, 3, 15),
	hcb_struct(10, 10, 11),
	hcb_struct(10, 11, 10),
	hcb_struct(10, 12, 8),
	hcb_struct(10, 15, 6),
	hcb_struct(10, 15, 7),
	hcb_struct(10, 8, 14),
	hcb_struct(10, 15, 1),
	hcb_struct(10, 7, 14),
	hcb_struct(10, 9, 0),
	hcb_struct(10, 0, 9),
	hcb_struct(10, 9, 13),
	hcb_struct(10, 9, 13),
	hcb_struct(10, 9, 13),
	hcb_struct(10, 9, 13),
	hcb_struct(10, 9, 12),
	hcb_struct(10, 9, 12),
	hcb_struct(10, 9, 12),
	hcb_struct(10, 9, 12),
	hcb_struct(10, 12, 9),
	hcb_struct(10, 12, 9),
	hcb_struct(10, 12, 9),
	hcb_struct(10, 12, 9),
	hcb_struct(10, 14, 8),
	hcb_struct(10, 14, 8),
	hcb_struct(10, 14, 8),
	hcb_struct(10, 14, 8),
	hcb_struct(10, 10, 13),
	hcb_struct(10, 10, 13),
	hcb_struct(10, 10, 13),
	hcb_struct(10, 10, 13),
	hcb_struct(10, 14, 9),
	hcb_struct(10, 14, 9),
	hcb_struct(10, 14, 9),
	hcb_struct(10, 14, 9),
	hcb_struct(10, 12, 10),
	hcb_struct(10, 12, 10),
	hcb_struct(10, 12, 10),
	hcb_struct(10, 12, 10),
	hcb_struct(10, 6, 15),
	hcb_struct(10, 6, 15),
	hcb_struct(10, 6, 15),
	hcb_struct(10, 6, 15),
	hcb_struct(10, 7, 15),
	hcb_struct(10, 7, 15),
	hcb_struct(10, 7, 15),
	hcb_struct(10, 7, 15),
	hcb_struct(11, 9, 14),
	hcb_struct(11, 9, 14),
	hcb_struct(11, 15, 8),
	hcb_struct(11, 15, 8),
	hcb_struct(11, 11, 11),
	hcb_struct(11, 11, 11),
	hcb_struct(11, 11, 14),
	hcb_struct(11, 11, 14),
	hcb_struct(11, 1, 15),
	hcb_struct(11, 1, 15),
	hcb_struct(11, 10, 12),
	hcb_struct(11, 10, 12),
	hcb_struct(11, 10, 14),
	hcb_struct(11, 10, 14),
	hcb_struct(11, 13, 11),
	hcb_struct(11, 13, 11),
	hcb_struct(11, 13, 10),
	hcb_struct(11, 13, 10),
	hcb_struct(11, 11, 13),
	hcb_struct(11, 11, 13),
	hcb_struct(11, 11, 12),
	hcb_struct(11, 11, 12),
	hcb_struct(11, 8, 15),
	hcb_struct(11, 8, 15),
	hcb_struct(11, 14, 11),
	hcb_struct(11, 14, 11),
	hcb_struct(11, 13, 12),
	hcb_struct(11, 13, 12),
	hcb_struct(11, 12, 13),
	hcb_struct(11, 12, 13),
	hcb_struct(11, 15, 9),
	hcb_struct(11, 15, 9),
	hcb_struct(11, 14, 10),
	hcb_struct(11, 14, 10),
	hcb_struct(11, 10, 0),
	hcb_struct(11, 10, 0),
	hcb_struct(11, 12, 11),
	hcb_struct(11, 12, 11),
	hcb_struct(11, 9, 15),
	hcb_struct(11, 9, 15),
	hcb_struct(11, 0, 10),
	hcb_struct(11, 0, 10),
	hcb_struct(11, 12, 12),
	hcb_struct(11, 12, 12),
	hcb_struct(11, 11, 0),
	hcb_struct(11, 11, 0),
	hcb_struct(11, 12, 14),
	hcb_struct(11, 12, 14),
	hcb_struct(11, 10, 15),
	hcb_struct(11, 10, 15),
	hcb_struct(11, 13, 13),
	hcb_struct(11, 13, 13),
	hcb_struct(11, 0, 13),
	hcb_struct(11, 0, 13),
	hcb_struct(11, 14, 12),
	hcb_struct(11, 14, 12),
	hcb_struct(11, 15, 10),
	hcb_struct(11, 15, 10),
	hcb_struct(11, 15, 11),
	hcb_struct(11, 15, 11),
	hcb_struct(11, 11, 15),
	hcb_struct(11, 11, 15),
	hcb_struct(11, 14, 13),
	hcb_struct(11, 14, 13),
	hcb_struct(11, 13, 0),
	hcb_struct(11, 13, 0),
	hcb_struct(11, 0, 11),
	hcb_struct(11, 0, 11),
	hcb_struct(11, 13, 14),
	hcb_struct(11, 13, 14),
	hcb_struct(11, 15, 12),
	hcb_struct(11, 15, 12),
	hcb_struct(11, 15, 13),
	hcb_struct(11, 15, 13),
	hcb_struct(11, 12, 15),
	hcb_struct(11, 12, 15),
	hcb_struct(11, 14, 0),
	hcb_struct(11, 14, 0),
	hcb_struct(11, 14, 14),
	hcb_struct(11, 14, 14),
	hcb_struct(11, 13, 15),
	hcb_struct(11, 13, 15),
	hcb_struct(11, 12, 0),
	hcb_struct(11, 12, 0),
	hcb_struct(11, 14, 15),
	hcb_struct(11, 14, 15),
	hcb_struct(12, 0, 14),
	hcb_struct(12, 0, 12),
	hcb_struct(12, 15, 14),
	hcb_struct(12, 15, 0),
	hcb_struct(12, 0, 15),
	hcb_struct(12, 15, 15),    
]

hcb_2step_bits = [
    0, 5, 5, 0, 5, 0, 5, 0, 5, 0, 6, 5,
]

hcb_2step = [
    None, huffman_01_1, huffman_02_1, None, huffman_04_1, None, huffman_06_1, None, huffman_08_1, None, huffman_10_1, huffman_11_1,
]

hcb_table_size = [
    0, 114, 86, 161, 185, 161, 126, 127, 83, 337, 210, 374,
]

hcb_table = [
    None, huffman_01, huffman_02, huffman_03, huffman_04, huffman_05, huffman_06, huffman_07, huffman_08, huffman_09, huffman_10, huffman_11,
]

def hcod_sf(reader: BitReader) -> tuple:
    Pos = 0
    while huffman_sf[Pos][1] != 0:
        h, err = reader.ReadBitsAsUInt8(1)
        Pos += huffman_sf[Pos][h]

        if Pos > 240:
            return 255, ValueError(f"Error: Scale Factor Huffman encoded position ({Pos}) out of range")
    
    return huffman_sf[Pos][0], None

def hcod_2step(reader: BitReader, codebook: int, values: list) -> Optional[Exception]:
    toRead = hcb_2step_bits[codebook]
    if toRead > reader.BitsLeft():
        toRead = reader.BitsLeft()

    codeWord, _ = reader.PeekBits(toRead)
    offset = hcb_2step[codebook][codeWord].Offset
    extra = hcb_2step[codebook][codeWord].Extra

    if extra > 0:
        reader.SkipBits(hcb_2step_bits[codebook])
        offset_incr, _ = reader.PeekBits(extra)
        offset += offset_incr
        if skip := hcb_table[codebook][offset][0] - hcb_2step_bits[codebook]:
            if skip > 0:
                reader.SkipBits(skip)
    else:
        reader.SkipBits(hcb_table[codebook][offset][0])

    if offset > hcb_table_size[codebook]:
        return ValueError(f"Error: Binary search offset ({offset}) for Huffman word out of bounds ({hcb_table[codebook]})")

    for i in range(len(values)):
        values[i] = hcb_table[codebook][offset][i + 1]

    return None

def hcod_binary(reader: BitReader, codebook: int, values: list) -> Optional[Exception]:
    offset = 0
    while hcb_table[codebook][offset][0] == 0:
        bit, err = reader.ReadBit()
        if err:
            return err

        offset += hcb_table[codebook][offset][1 + bit]

    if offset >= hcb_table_size[codebook]:
        return ValueError(f"Error: Binary search offset ({offset}) for Huffman word out of bounds")

    for i in range(len(values)):
        try:
            values[i] = hcb_table[codebook][offset][i + 1]
        except IndexError:
            return None

    return None

def hcod(reader: BitReader, sect_cb: int) -> tuple:
    values = []
    err = None

    if sect_cb in [1, 2, 4]:
        values = [0] * 4
        err = hcod_2step(reader, sect_cb, values)
    elif sect_cb == 3:
        values = [0] * 4
        err = hcod_binary(reader, sect_cb, values)
    elif sect_cb in [5, 7, 9]:
        values = [0] * 2
        err = hcod_binary(reader, sect_cb, values)
    elif sect_cb in [6, 8, 10, 11]:
        values = [0] * 2
        err = hcod_2step(reader, sect_cb, values)
    else:
        return values, ValueError(f"Error: codebook ({sect_cb}) is unsupported")

    if err:
        return values, err

    if sect_cb not in [1, 2, 5, 6]:
        for i in range(len(values)):
            if values[i] != 0:
                sign = reader.ReadBitAsBool()[0]
                if sign:
                    values[i] = -values[i]

    if sect_cb == 11:
        for i in range(2):
            if values[i] in [16, -16]:
                esc = True
                bitcount = 3
                while esc:
                    bitcount += 1
                    esc = reader.ReadBitAsBool()[0]
                offset = reader.ReadBitsAsInt(bitcount)[0]

                val = offset | (1 << bitcount)
                if values[i] < 0:
                    values[i] = -val
                else:
                    values[i] = val

    return values, None

t_huffman_env_1_5dB = [
	[1, 2], [-64, -65], [3, 4], [-63, -66],
	[5, 6], [-62, -67], [7, 8], [-61, -68],
	[9, 10], [-60, -69], [11, 12], [-59, -70],
	[13, 14], [-58, -71], [15, 16], [-57, -72],
	[17, 18], [-73, -56], [19, 21], [-74, 20],
	[-55, -75], [22, 26], [23, 24], [-54, -76],
	[-77, 25], [-53, -78], [27, 34], [28, 29],
	[-52, -79], [30, 31], [-80, -51], [32, 33],
	[-83, -82], [-81, -50], [35, 57], [36, 40],
	[37, 38], [-88, -84], [-48, 39], [-90, -85],
	[41, 46], [42, 43], [-49, -87], [44, 45],
	[-89, -86], [-124, -123], [47, 50], [48, 49],
	[-122, -121], [-120, -119], [51, 54], [52, 53],
	[-118, -117], [-116, -115], [55, 56], [-114, -113],
	[-112, -111], [58, 89], [59, 74], [60, 67],
	[61, 64], [62, 63], [-110, -109], [-108, -107],
	[65, 66], [-106, -105], [-104, -103], [68, 71],
	[69, 70], [-102, -101], [-100, -99], [72, 73],
	[-98, -97], [-96, -95], [75, 82], [76, 79],
	[77, 78], [-94, -93], [-92, -91], [80, 81],
	[-47, -46], [-45, -44], [83, 86], [84, 85],
	[-43, -42], [-41, -40], [87, 88], [-39, -38],
	[-37, -36], [90, 105], [91, 98], [92, 95],
	[93, 94], [-35, -34], [-33, -32], [96, 97],
	[-31, -30], [-29, -28], [99, 102], [100, 101],
	[-27, -26], [-25, -24], [103, 104], [-23, -22],
	[-21, -20], [106, 113], [107, 110], [108, 109],
	[-19, -18], [-17, -16], [111, 112], [-15, -14],
	[-13, -12], [114, 117], [115, 116], [-11, -10],
	[-9, -8], [118, 119], [-7, -6], [-5, -4],    
]

f_huffman_env_1_5dB = [
    [1, 2], [-64, -65], [3, 4], [-63, -66],
	[5, 6], [-67, -62], [7, 8], [-68, -61],
	[9, 10], [-69, -60], [11, 13], [-70, 12],
	[-59, -71], [14, 16], [-58, 15], [-72, -57],
	[17, 19], [-73, 18], [-56, -74], [20, 23],
	[21, 22], [-55, -75], [-54, -53], [24, 27],
	[25, 26], [-76, -52], [-77, -51], [28, 31],
	[29, 30], [-50, -78], [-79, -49], [32, 36],
	[33, 34], [-48, -47], [-80, 35], [-81, -82],
	[37, 47], [38, 41], [39, 40], [-83, -46],
	[-45, -84], [42, 44], [-85, 43], [-44, -43],
	[45, 46], [-88, -87], [-86, -90], [48, 66],
	[49, 56], [50, 53], [51, 52], [-92, -42],
	[-41, -39], [54, 55], [-105, -89], [-38, -37],
	[57, 60], [58, 59], [-94, -91], [-40, -36],
	[61, 63], [-20, 62], [-115, -110], [64, 65],
	[-108, -107], [-101, -97], [67, 89], [68, 75],
	[69, 72], [70, 71], [-95, -93], [-34, -27],
	[73, 74], [-22, -17], [-16, -124], [76, 82],
	[77, 79], [-123, 78], [-122, -121], [80, 81],
	[-120, -119], [-118, -117], [83, 86], [84, 85],
	[-116, -114], [-113, -112], [87, 88], [-111, -109],
	[-106, -104], [90, 105], [91, 98], [92, 95],
	[93, 94], [-103, -102], [-100, -99], [96, 97],
	[-98, -96], [-35, -33], [99, 102], [100, 101],
	[-32, -31], [-30, -29], [103, 104], [-28, -26],
	[-25, -24], [106, 113], [107, 110], [108, 109],
	[-23, -21], [-19, -18], [111, 112], [-15, -14],
	[-13, -12], [114, 117], [115, 116], [-11, -10],
	[-9, -8], [118, 119], [-7, -6], [-5, -4],
]

t_huffman_env_bal_1_5dB = [
    [-64, 1], [-63, 2], [-65, 3], [-62, 4],
	[-66, 5], [-61, 6], [-67, 7], [-60, 8],
	[-68, 9], [10, 11], [-69, -59], [12, 13],
	[-70, -58], [14, 28], [15, 21], [16, 18],
	[-57, 17], [-71, -56], [19, 20], [-88, -87],
	[-86, -85], [22, 25], [23, 24], [-84, -83],
	[-82, -81], [26, 27], [-80, -79], [-78, -77],
	[29, 36], [30, 33], [31, 32], [-76, -75],
	[-74, -73], [34, 35], [-72, -55], [-54, -53],
	[37, 41], [38, 39], [-52, -51], [-50, 40],
	[-49, -48], [42, 45], [43, 44], [-47, -46],
	[-45, -44], [46, 47], [-43, -42], [-41, -40],
]

f_huffman_env_bal_1_5dB = [
    [-64, 1], [-65, 2], [-63, 3], [-66, 4],
	[-62, 5], [-61, 6], [-67, 7], [-68, 8],
	[-60, 9], [10, 11], [-69, -59], [-70, 12],
	[-58, 13], [14, 17], [-71, 15], [-57, 16],
	[-56, -73], [18, 32], [19, 25], [20, 22],
	[-72, 21], [-88, -87], [23, 24], [-86, -85],
	[-84, -83], [26, 29], [27, 28], [-82, -81],
	[-80, -79], [30, 31], [-78, -77], [-76, -75],
	[33, 40], [34, 37], [35, 36], [-74, -55],
	[-54, -53], [38, 39], [-52, -51], [-50, -49],
	[41, 44], [42, 43], [-48, -47], [-46, -45],
	[45, 46], [-44, -43], [-42, 47], [-41, -40],
]

t_huffman_env_3_0dB = [
    [-64, 1], [-65, 2], [-63, 3], [-66, 4],
	[-62, 5], [-67, 6], [-61, 7], [-68, 8],
	[-60, 9], [10, 11], [-69, -59], [12, 14],
	[-70, 13], [-71, -58], [15, 18], [16, 17],
	[-72, -57], [-73, -74], [19, 22], [-56, 20],
	[-55, 21], [-54, -77], [23, 31], [24, 25],
	[-75, -76], [26, 27], [-78, -53], [28, 29],
	[-52, -95], [-94, 30], [-93, -92], [32, 47],
	[33, 40], [34, 37], [35, 36], [-91, -90],
	[-89, -88], [38, 39], [-87, -86], [-85, -84],
	[41, 44], [42, 43], [-83, -82], [-81, -80],
	[45, 46], [-79, -51], [-50, -49], [48, 55],
	[49, 52], [50, 51], [-48, -47], [-46, -45],
	[53, 54], [-44, -43], [-42, -41], [56, 59],
	[57, 58], [-40, -39], [-38, -37], [60, 61],
	[-36, -35], [-34, -33],
]

f_huffman_env_3_0dB = [
    [-64, 1], [-65, 2], [-63, 3], [-66, 4],
	[-62, 5], [-67, 6], [7, 8], [-61, -68],
	[9, 10], [-60, -69], [11, 12], [-59, -70],
	[13, 14], [-58, -71], [15, 16], [-57, -72],
	[17, 19], [-56, 18], [-55, -73], [20, 24],
	[21, 22], [-74, -54], [-53, 23], [-75, -76],
	[25, 30], [26, 27], [-52, -51], [28, 29],
	[-77, -79], [-50, -49], [31, 39], [32, 35],
	[33, 34], [-78, -46], [-82, -88], [36, 37],
	[-83, -48], [-47, 38], [-86, -85], [40, 47],
	[41, 44], [42, 43], [-80, -44], [-43, -42],
	[45, 46], [-39, -87], [-84, -40], [48, 55],
	[49, 52], [50, 51], [-95, -94], [-93, -92],
	[53, 54], [-91, -90], [-89, -81], [56, 59],
	[57, 58], [-45, -41], [-38, -37], [60, 61],
	[-36, -35], [-34, -33],
]

t_huffman_env_bal_3_0dB = [
    [-64, 1], [-63, 2], [-65, 3], [-66, 4],
	[-62, 5], [-61, 6], [-67, 7], [-68, 8],
	[-60, 9], [10, 16], [11, 13], [-69, 12],
	[-76, -75], [14, 15], [-74, -73], [-72, -71],
	[17, 20], [18, 19], [-70, -59], [-58, -57],
	[21, 22], [-56, -55], [-54, 23], [-53, -52],
]

f_huffman_env_bal_3_0dB = [
    [-64, 1], [-65, 2], [-63, 3], [-66, 4],
	[-62, 5], [-61, 6], [-67, 7], [-68, 8],
	[-60, 9], [10, 13], [-69, 11], [-59, 12],
	[-58, -76], [14, 17], [15, 16], [-75, -74],
	[-73, -72], [18, 21], [19, 20], [-71, -70],
	[-57, -56], [22, 23], [-55, -54], [-53, -52],
]

t_huffman_noise_3_0dB = [
    [-64, 1], [-63, 2], [-65, 3], [-66, 4],
	[-62, 5], [-67, 6], [7, 8], [-61, -68],
	[9, 30], [10, 15], [-60, 11], [-69, 12],
	[13, 14], [-59, -53], [-95, -94], [16, 23],
	[17, 20], [18, 19], [-93, -92], [-91, -90],
	[21, 22], [-89, -88], [-87, -86], [24, 27],
	[25, 26], [-85, -84], [-83, -82], [28, 29],
	[-81, -80], [-79, -78], [31, 46], [32, 39],
	[33, 36], [34, 35], [-77, -76], [-75, -74],
	[37, 38], [-73, -72], [-71, -70], [40, 43],
	[41, 42], [-58, -57], [-56, -55], [44, 45],
	[-54, -52], [-51, -50], [47, 54], [48, 51],
	[49, 50], [-49, -48], [-47, -46], [52, 53],
	[-45, -44], [-43, -42], [55, 58], [56, 57],
	[-41, -40], [-39, -38], [59, 60], [-37, -36],
	[-35, 61], [-34, -33],
]

t_huffman_noise_bal_3_0dB = [
    [-64, 1], [-65, 2], [-63, 3], [4, 9],
	[-66, 5], [-62, 6], [7, 8], [-76, -75],
	[-74, -73], [10, 17], [11, 14], [12, 13],
	[-72, -71], [-70, -69], [15, 16], [-68, -67],
	[-61, -60], [18, 21], [19, 20], [-59, -58],
	[-57, -56], [22, 23], [-55, -54], [-53, -52],
]

def sbr_huff_dec(reader: BitReader, t_huff: list) -> int:
    index = 0

    while index >= 0:
        bit, _ = reader.ReadBit()
        index = t_huff[index][bit]

    return index + 64
